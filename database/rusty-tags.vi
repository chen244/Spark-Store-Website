!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
Action	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/hooks.rs	/^impl From<i32> for Action {$/;"	c
Action	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/hooks.rs	/^pub enum Action {$/;"	g
Aggregate	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^pub trait Aggregate<A, T>$/;"	i
AndThenRows	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^impl<T, E, F> Iterator for AndThenRows<'_, F>$/;"	c
AndThenRows	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^pub struct AndThenRows<'stmt, F> {$/;"	s
Arc	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/from_sql.rs	/^impl FromSql for std::sync::Arc<str> {$/;"	c
Arc	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/to_sql.rs	/^impl<T: ToSql + ?Sized> ToSql for std::sync::Arc<T> {$/;"	c
Array	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/to_sql.rs	/^    Array(Array),$/;"	e	enum:ToSqlOutput
Array	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/array.rs	/^impl ToSql for Array {$/;"	c
Array	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/array.rs	/^pub type Array = Rc<Vec<Value>>;$/;"	t
ArrayTab	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/array.rs	/^struct ArrayTab {$/;"	s
ArrayTab	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/array.rs	/^unsafe impl<'vtab> VTab<'vtab> for ArrayTab {$/;"	c
ArrayTabCursor	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/array.rs	/^impl ArrayTabCursor<'_> {$/;"	c
ArrayTabCursor	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/array.rs	/^struct ArrayTabCursor<'vtab> {$/;"	s
ArrayTabCursor	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/array.rs	/^unsafe impl VTabCursor for ArrayTabCursor<'_> {$/;"	c
Attached	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    Attached(&'a str),$/;"	e	enum:DatabaseName
AutoIndex	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    AutoIndex = 3,$/;"	e	enum:StatementStatus
Aux	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/array.rs	/^    type Aux = ();$/;"	t	implementation:ArrayTab
Aux	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/csvtab.rs	/^    type Aux = ();$/;"	t	implementation:CsvTab
Aux	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    type Aux;$/;"	t	interface:VTab
Aux	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/series.rs	/^    type Aux = ();$/;"	t	implementation:SeriesTab
AuxInner	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^type AuxInner = Arc<dyn Any + Send + Sync + 'static>;$/;"	t
BYPASS_SQLITE_INIT	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/inner_connection.rs	/^pub static BYPASS_SQLITE_INIT: AtomicBool = AtomicBool::new(false);$/;"	v
BYPASS_VERSION_CHECK	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/inner_connection.rs	/^pub static BYPASS_VERSION_CHECK: AtomicBool = AtomicBool::new(false);$/;"	v
Backup	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/backup.rs	/^impl Backup<'_, '_> {$/;"	c
Backup	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/backup.rs	/^impl Drop for Backup<'_, '_> {$/;"	c
Backup	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/backup.rs	/^pub struct Backup<'a, 'b> {$/;"	s
Batch	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^impl<'conn, 'sql> Batch<'conn, 'sql> {$/;"	c
Batch	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^impl<'conn> Iterator for Batch<'conn, '_> {$/;"	c
Batch	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^pub struct Batch<'conn, 'sql> {$/;"	s
BigTuple	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^        type BigTuple = ($/;"	t	function:tests::test_try_from_row_for_tuple_16
Blob	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/blob/mod.rs	/^impl Blob<'_> {$/;"	c
Blob	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/blob/mod.rs	/^impl Drop for Blob<'_> {$/;"	c
Blob	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/blob/mod.rs	/^impl io::Read for Blob<'_> {$/;"	c
Blob	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/blob/mod.rs	/^impl io::Seek for Blob<'_> {$/;"	c
Blob	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/blob/mod.rs	/^impl io::Write for Blob<'_> {$/;"	c
Blob	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/blob/mod.rs	/^pub struct Blob<'conn> {$/;"	s
Blob	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/blob/pos_io.rs	/^impl<'conn> Blob<'conn> {$/;"	c
Blob	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/mod.rs	/^    Blob,$/;"	e	enum:Type
Blob	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value.rs	/^    Blob(Vec<u8>),$/;"	e	enum:Value
Blob	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value_ref.rs	/^    Blob(&'a [u8]),$/;"	e	enum:ValueRef
BlobSizeError	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/error.rs	/^    BlobSizeError,$/;"	e	enum:Error
Borrowed	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/to_sql.rs	/^    Borrowed(ValueRef<'a>),$/;"	e	enum:ToSqlOutput
Box	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/from_sql.rs	/^impl FromSql for Box<str> {$/;"	c
Box	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/to_sql.rs	/^impl<T: ToSql + ?Sized> ToSql for Box<T> {$/;"	c
BoxError	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^        type BoxError = Box<dyn std::error::Error + Send + Sync + 'static>;$/;"	t	function:test::regexp_with_auxilliary
Busy	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/backup.rs	/^    Busy,$/;"	e	enum:StepResult
CALLED	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/busy.rs	/^        static CALLED: AtomicBool = AtomicBool::new(false);$/;"	v	function:test::test_busy_handler
CALLED	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/hooks.rs	/^        static CALLED: AtomicBool = AtomicBool::new(false);$/;"	v	function:test::test_progress_handler
CALLED	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^        static CALLED: AtomicBool = AtomicBool::new(false);$/;"	v	function:test::test_changeset_apply
CachedStatement	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/cache.rs	/^impl CachedStatement<'_> {$/;"	c
CachedStatement	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/cache.rs	/^impl Drop for CachedStatement<'_> {$/;"	c
CachedStatement	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/cache.rs	/^impl<'conn> Deref for CachedStatement<'conn> {$/;"	c
CachedStatement	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/cache.rs	/^impl<'conn> DerefMut for CachedStatement<'conn> {$/;"	c
CachedStatement	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/cache.rs	/^pub struct CachedStatement<'conn> {$/;"	s
Changegroup	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^impl Changegroup {$/;"	c
Changegroup	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^impl Drop for Changegroup {$/;"	c
Changegroup	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^pub struct Changegroup {$/;"	s
Changeset	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^impl Changeset {$/;"	c
Changeset	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^impl Drop for Changeset {$/;"	c
Changeset	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^pub struct Changeset {$/;"	s
ChangesetItem	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^impl ChangesetItem {$/;"	c
ChangesetItem	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^pub struct ChangesetItem {$/;"	s
ChangesetIter	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^impl ChangesetIter<'_> {$/;"	c
ChangesetIter	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^impl Drop for ChangesetIter<'_> {$/;"	c
ChangesetIter	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^impl FallibleStreamingIterator for ChangesetIter<'_> {$/;"	c
ChangesetIter	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^pub struct ChangesetIter<'changeset> {$/;"	s
Column	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/column.rs	/^impl Column<'_> {$/;"	c
Column	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/column.rs	/^pub struct Column<'stmt> {$/;"	s
Commit	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    Commit,$/;"	e	enum:DropBehavior
ConflictAction	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^pub enum ConflictAction {$/;"	g
ConflictType	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^impl From<i32> for ConflictType {$/;"	c
ConflictType	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^pub enum ConflictType {$/;"	g
Connection	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/backup.rs	/^impl Connection {$/;"	c
Connection	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/blob/mod.rs	/^impl Connection {$/;"	c
Connection	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/busy.rs	/^impl Connection {$/;"	c
Connection	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/cache.rs	/^impl Connection {$/;"	c
Connection	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/collation.rs	/^impl Connection {$/;"	c
Connection	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/config.rs	/^impl Connection {$/;"	c
Connection	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^impl Connection {$/;"	c
Connection	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/hooks.rs	/^impl Connection {$/;"	c
Connection	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^impl Connection {$/;"	c
Connection	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^impl Drop for Connection {$/;"	c
Connection	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^impl fmt::Debug for Connection {$/;"	c
Connection	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^pub struct Connection {$/;"	s
Connection	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^unsafe impl Send for Connection {}$/;"	c
Connection	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/limits.rs	/^impl Connection {$/;"	c
Connection	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/pragma.rs	/^impl Connection {$/;"	c
Connection	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^impl Connection {$/;"	c
Connection	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/trace.rs	/^impl Connection {$/;"	c
Connection	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^impl Connection {$/;"	c
Connection	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^impl Connection {$/;"	c
ConnectionRef	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^impl Deref for ConnectionRef<'_> {$/;"	c
ConnectionRef	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^pub struct ConnectionRef<'ctx> {$/;"	s
Context	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^impl Context<'_> {$/;"	c
Context	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^pub struct Context<'a> {$/;"	s
Context	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^impl Context {$/;"	c
Context	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^pub struct Context(*mut ffi::sqlite3_context);$/;"	s
Count	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^    impl Aggregate<i64, i64> for Count {$/;"	c	module:test
Count	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^    struct Count;$/;"	s	module:test
Cow	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/to_sql.rs	/^impl<T: ToSql + ToOwned + ?Sized> ToSql for Cow<'_, T> {$/;"	c
CreateVTab	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^pub trait CreateVTab<'vtab>: VTab<'vtab> {$/;"	i
CsvTab	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/csvtab.rs	/^impl CreateVTab<'_> for CsvTab {}$/;"	c
CsvTab	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/csvtab.rs	/^impl CsvTab {$/;"	c
CsvTab	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/csvtab.rs	/^struct CsvTab {$/;"	s
CsvTab	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/csvtab.rs	/^unsafe impl<'vtab> VTab<'vtab> for CsvTab {$/;"	c
CsvTabCursor	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/csvtab.rs	/^impl CsvTabCursor<'_> {$/;"	c
CsvTabCursor	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/csvtab.rs	/^struct CsvTabCursor<'vtab> {$/;"	s
CsvTabCursor	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/csvtab.rs	/^unsafe impl VTabCursor for CsvTabCursor<'_> {$/;"	c
Cursor	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/array.rs	/^    type Cursor = ArrayTabCursor<'vtab>;$/;"	t	implementation:ArrayTab
Cursor	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/csvtab.rs	/^    type Cursor = CsvTabCursor<'vtab>;$/;"	t	implementation:CsvTab
Cursor	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    type Cursor: VTabCursor;$/;"	t	interface:VTab
Cursor	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/series.rs	/^    type Cursor = SeriesTabCursor<'vtab>;$/;"	t	implementation:SeriesTab
CustomError	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^        enum CustomError {$/;"	g	module:test::query_and_then_tests
CustomError	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^        impl From<Error> for CustomError {$/;"	c	module:test::query_and_then_tests
CustomError	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^        impl StdError for CustomError {$/;"	c	module:test::query_and_then_tests
CustomError	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^        impl fmt::Display for CustomError {$/;"	c	module:test::query_and_then_tests
CustomResult	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^        type CustomResult<T> = Result<T, CustomError>;$/;"	t	module:test::query_and_then_tests
DatabaseName	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^impl DatabaseName<'_> {$/;"	c
DatabaseName	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^pub enum DatabaseName<'a> {$/;"	g
DateTime	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/chrono.rs	/^impl FromSql for DateTime<Local> {$/;"	c
DateTime	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/chrono.rs	/^impl FromSql for DateTime<Utc> {$/;"	c
DateTime	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/chrono.rs	/^impl<Tz: TimeZone> ToSql for DateTime<Tz> {$/;"	c
DbConfig	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/config.rs	/^pub enum DbConfig {$/;"	g
DbEtc	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/mod.rs	/^        struct DbEtc<'conn> {$/;"	s	function:test::test_numeric_conversions
Deferred	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    Deferred,$/;"	e	enum:TransactionBehavior
Done	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/backup.rs	/^    Done,$/;"	e	enum:StepResult
DropBehavior	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^pub enum DropBehavior {$/;"	g
Error	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/error.rs	/^impl From<::std::ffi::NulError> for Error {$/;"	c
Error	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/error.rs	/^impl From<FromSqlError> for Error {$/;"	c
Error	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/error.rs	/^impl From<str::Utf8Error> for Error {$/;"	c
Error	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/error.rs	/^impl PartialEq for Error {$/;"	c
Error	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/error.rs	/^impl error::Error for Error {$/;"	c
Error	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/error.rs	/^impl fmt::Display for Error {$/;"	c
Error	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/error.rs	/^pub enum Error {$/;"	g
Error	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^    type Error = Error;$/;"	t
Error	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^    type Error = Error;$/;"	t	implementation:Rows
Error	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    type Error = crate::error::Error;$/;"	t	implementation:ChangesetIter
Error	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/csvtab.rs	/^impl From<csv::Error> for Error {$/;"	c
Exclusive	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    Exclusive,$/;"	e	enum:TransactionBehavior
ExecuteReturnedResults	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/error.rs	/^    ExecuteReturnedResults,$/;"	e	enum:Error
FromSql	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/from_sql.rs	/^pub trait FromSql: Sized {$/;"	i
FromSqlConversionFailure	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/error.rs	/^    FromSqlConversionFailure(usize, Type, Box<dyn error::Error + Send + Sync + 'static>),$/;"	e	enum:Error
FromSqlError	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/from_sql.rs	/^impl Error for FromSqlError {$/;"	c
FromSqlError	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/from_sql.rs	/^impl PartialEq for FromSqlError {$/;"	c
FromSqlError	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/from_sql.rs	/^impl fmt::Display for FromSqlError {$/;"	c
FromSqlError	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/from_sql.rs	/^pub enum FromSqlError {$/;"	g
FromSqlResult	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/from_sql.rs	/^pub type FromSqlResult<T> = Result<T, FromSqlError>;$/;"	t
FullscanStep	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    FullscanStep = 1,$/;"	e	enum:StatementStatus
FunctionFlags	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^impl Default for FunctionFlags {$/;"	c
GetAuxWrongType	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/error.rs	/^    GetAuxWrongType,$/;"	e	enum:Error
Ignore	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    Ignore,$/;"	e	enum:DropBehavior
Immediate	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    Immediate,$/;"	e	enum:TransactionBehavior
IndexConstraint	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^impl IndexConstraint<'_> {$/;"	c
IndexConstraint	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^pub struct IndexConstraint<'a>(&'a ffi::sqlite3_index_constraint);$/;"	s
IndexConstraintIter	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^impl<'a> Iterator for IndexConstraintIter<'a> {$/;"	c
IndexConstraintIter	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^pub struct IndexConstraintIter<'a> {$/;"	s
IndexConstraintOp	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^impl From<u8> for IndexConstraintOp {$/;"	c
IndexConstraintOp	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^pub enum IndexConstraintOp {$/;"	g
IndexConstraintUsage	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^impl IndexConstraintUsage<'_> {$/;"	c
IndexConstraintUsage	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^pub struct IndexConstraintUsage<'a>(&'a mut ffi::sqlite3_index_constraint_usage);$/;"	s
IndexInfo	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^impl IndexInfo {$/;"	c
IndexInfo	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^pub struct IndexInfo(*mut ffi::sqlite3_index_info);$/;"	s
InnerConnection	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/busy.rs	/^impl InnerConnection {$/;"	c
InnerConnection	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/collation.rs	/^impl InnerConnection {$/;"	c
InnerConnection	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^impl InnerConnection {$/;"	c
InnerConnection	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/hooks.rs	/^impl InnerConnection {$/;"	c
InnerConnection	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/inner_connection.rs	/^impl Drop for InnerConnection {$/;"	c
InnerConnection	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/inner_connection.rs	/^impl InnerConnection {$/;"	c
InnerConnection	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/inner_connection.rs	/^pub struct InnerConnection {$/;"	s
InnerConnection	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^impl InnerConnection {$/;"	c
Integer	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/mod.rs	/^    Integer,$/;"	e	enum:Type
Integer	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value.rs	/^    Integer(i64),$/;"	e	enum:Value
Integer	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value_ref.rs	/^    Integer(i64),$/;"	e	enum:ValueRef
IntegralValueOutOfRange	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/error.rs	/^    IntegralValueOutOfRange(usize, i64),$/;"	e	enum:Error
InterruptHandle	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^impl InterruptHandle {$/;"	c
InterruptHandle	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^pub struct InterruptHandle {$/;"	s
InterruptHandle	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^unsafe impl Send for InterruptHandle {}$/;"	c
InterruptHandle	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^unsafe impl Sync for InterruptHandle {}$/;"	c
IntoIter	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    type IntoIter = ValueIter<'a>;$/;"	t	implementation:Values
InvalidColumnIndex	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/error.rs	/^    InvalidColumnIndex(usize),$/;"	e	enum:Error
InvalidColumnName	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/error.rs	/^    InvalidColumnName(String),$/;"	e	enum:Error
InvalidColumnType	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/error.rs	/^    InvalidColumnType(usize, String, Type),$/;"	e	enum:Error
InvalidFilterParameterType	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/error.rs	/^    InvalidFilterParameterType(usize, Type),$/;"	e	enum:Error
InvalidFunctionParameterType	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/error.rs	/^    InvalidFunctionParameterType(usize, Type),$/;"	e	enum:Error
InvalidI128Size	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/from_sql.rs	/^    InvalidI128Size(usize),$/;"	e	enum:FromSqlError
InvalidParameterCount	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/error.rs	/^    InvalidParameterCount(usize, usize),$/;"	e	enum:Error
InvalidParameterName	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/error.rs	/^    InvalidParameterName(String),$/;"	e	enum:Error
InvalidPath	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/error.rs	/^    InvalidPath(PathBuf),$/;"	e	enum:Error
InvalidQuery	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/error.rs	/^    InvalidQuery,$/;"	e	enum:Error
InvalidType	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/from_sql.rs	/^    InvalidType,$/;"	e	enum:FromSqlError
InvalidUuidSize	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/from_sql.rs	/^    InvalidUuidSize(usize),$/;"	e	enum:FromSqlError
Item	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    type Item = Result<Statement<'conn>>;$/;"	t	implementation:Batch
Item	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^    type Item = B;$/;"	t
Item	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^    type Item = Result<T, E>;$/;"	t
Item	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^    type Item = Result<T>;$/;"	t
Item	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^    type Item = Row<'stmt>;$/;"	t	implementation:Rows
Item	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    type Item = ChangesetItem;$/;"	t	implementation:ChangesetIter
Item	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    type Item = IndexConstraint<'a>;$/;"	t	implementation:IndexConstraintIter
Item	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    type Item = OrderBy<'a>;$/;"	t	implementation:OrderByIter
Item	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    type Item = ValueRef<'a>;$/;"	t	implementation:ValueIter
Item	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    type Item = ValueRef<'a>;$/;"	t	implementation:Values
LoadExtensionGuard	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/load_extension_guard.rs	/^impl Drop for LoadExtensionGuard<'_> {$/;"	c
LoadExtensionGuard	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/load_extension_guard.rs	/^impl LoadExtensionGuard<'_> {$/;"	c
LoadExtensionGuard	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/load_extension_guard.rs	/^pub struct LoadExtensionGuard<'conn> {$/;"	s
Locked	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/backup.rs	/^    Locked,$/;"	e	enum:StepResult
Main	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    Main,$/;"	e	enum:DatabaseName
Map	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^impl<F, B> FallibleIterator for Map<'_, F>$/;"	c
Map	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^pub struct Map<'stmt, F> {$/;"	s
MappedRows	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^impl<T, F> Iterator for MappedRows<'_, F>$/;"	c
MappedRows	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^pub struct MappedRows<'stmt, F> {$/;"	s
MemUsed	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    MemUsed = 99,$/;"	e	enum:StatementStatus
Module	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^pub struct Module<'vtab, T: VTab<'vtab>> {$/;"	s
Module	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^unsafe impl<'vtab, T: VTab<'vtab>> Send for Module<'vtab, T> {}$/;"	c
Module	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^unsafe impl<'vtab, T: VTab<'vtab>> Sync for Module<'vtab, T> {}$/;"	c
ModuleError	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/error.rs	/^    ModuleError(String),$/;"	e	enum:Error
More	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/backup.rs	/^    More,$/;"	e	enum:StepResult
MultipleStatement	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/error.rs	/^    MultipleStatement,$/;"	e	enum:Error
NaiveDate	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/chrono.rs	/^impl FromSql for NaiveDate {$/;"	c
NaiveDate	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/chrono.rs	/^impl ToSql for NaiveDate {$/;"	c
NaiveDateTime	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/chrono.rs	/^impl FromSql for NaiveDateTime {$/;"	c
NaiveDateTime	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/chrono.rs	/^impl ToSql for NaiveDateTime {$/;"	c
NaiveTime	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/chrono.rs	/^impl FromSql for NaiveTime {$/;"	c
NaiveTime	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/chrono.rs	/^impl ToSql for NaiveTime {$/;"	c
NulError	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/error.rs	/^    NulError(::std::ffi::NulError),$/;"	e	enum:Error
Null	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/mod.rs	/^    Null,$/;"	e	enum:Type
Null	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/mod.rs	/^pub struct Null;$/;"	s
Null	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value.rs	/^    Null,$/;"	e	enum:Value
Null	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value_ref.rs	/^    Null,$/;"	e	enum:ValueRef
OffsetDateTime	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/time.rs	/^impl FromSql for OffsetDateTime {$/;"	c
OffsetDateTime	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/time.rs	/^impl ToSql for OffsetDateTime {$/;"	c
OpenFlags	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^impl Default for OpenFlags {$/;"	c
Operation	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^impl Operation<'_> {$/;"	c
Operation	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^pub struct Operation<'item> {$/;"	s
Option	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/from_sql.rs	/^impl<T: FromSql> FromSql for Option<T> {$/;"	c
Option	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/to_sql.rs	/^impl<T: ToSql> ToSql for Option<T> {$/;"	c
OptionalExtension	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^pub trait OptionalExtension<T> {$/;"	i
OrderBy	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^impl OrderBy<'_> {$/;"	c
OrderBy	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^pub struct OrderBy<'a>(&'a ffi::sqlite3_index_info_sqlite3_index_orderby);$/;"	s
OrderByIter	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^impl<'a> Iterator for OrderByIter<'a> {$/;"	c
OrderByIter	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^pub struct OrderByIter<'a> {$/;"	s
Other	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/from_sql.rs	/^    Other(Box<dyn Error + Send + Sync + 'static>),$/;"	e	enum:FromSqlError
OutOfRange	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/from_sql.rs	/^    OutOfRange(i64),$/;"	e	enum:FromSqlError
Owned	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/to_sql.rs	/^    Owned(Value),$/;"	e	enum:ToSqlOutput
Panic	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    Panic,$/;"	e	enum:DropBehavior
ParamIndexCache	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/param_cache.rs	/^impl ParamIndexCache {$/;"	c
ParamIndexCache	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/param_cache.rs	/^pub(crate) struct ParamIndexCache(RefCell<BTreeMap<SmallCString, usize>>);$/;"	s
Params	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/params.rs	/^pub trait Params: Sealed {$/;"	i
ParamsFromIter	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/params.rs	/^impl<I> Params for ParamsFromIter<I>$/;"	c
ParamsFromIter	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/params.rs	/^impl<I> Sealed for ParamsFromIter<I>$/;"	c
ParamsFromIter	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/params.rs	/^pub struct ParamsFromIter<I>(I);$/;"	s
Person	/home/cht/Rust/wssfinal/database/src/lib.rs	/^struct Person {$/;"	s
Progress	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/backup.rs	/^pub struct Progress {$/;"	s
QueryReturnedNoRows	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/error.rs	/^    QueryReturnedNoRows,$/;"	e	enum:Error
RawStatement	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/raw_statement.rs	/^impl Drop for RawStatement {$/;"	c
RawStatement	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/raw_statement.rs	/^impl RawStatement {$/;"	c
RawStatement	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/raw_statement.rs	/^pub struct RawStatement {$/;"	s
Rc	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/from_sql.rs	/^impl FromSql for std::rc::Rc<str> {$/;"	c
Rc	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/to_sql.rs	/^impl<T: ToSql + ?Sized> ToSql for std::rc::Rc<T> {$/;"	c
RePrepare	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    RePrepare = 5,$/;"	e	enum:StatementStatus
Real	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/mod.rs	/^    Real,$/;"	e	enum:Type
Real	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value.rs	/^    Real(f64),$/;"	e	enum:Value
Real	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value_ref.rs	/^    Real(f64),$/;"	e	enum:ValueRef
Result	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^impl<T> OptionalExtension<T> for Result<T> {$/;"	c
Result	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^pub type Result<T, E = Error> = result::Result<T, E>;$/;"	t
Rollback	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    Rollback,$/;"	e	enum:DropBehavior
Row	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/column.rs	/^impl<'stmt> Row<'stmt> {$/;"	c
Row	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^impl<'stmt> Row<'stmt> {$/;"	c
Row	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^pub struct Row<'stmt> {$/;"	s
RowIndex	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^pub trait RowIndex: sealed::Sealed {$/;"	i
Rows	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/column.rs	/^impl<'stmt> Rows<'stmt> {$/;"	c
Rows	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^impl Drop for Rows<'_> {$/;"	c
Rows	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^impl<'stmt> FallibleStreamingIterator for Rows<'stmt> {$/;"	c
Rows	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^impl<'stmt> Rows<'stmt> {$/;"	c
Rows	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^pub struct Rows<'stmt> {$/;"	s
Run	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    Run = 6,$/;"	e	enum:StatementStatus
SQLITE_CHANGESET_ABORT	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    SQLITE_CHANGESET_ABORT = ffi::SQLITE_CHANGESET_ABORT,$/;"	e	enum:ConflictAction
SQLITE_CHANGESET_CONFLICT	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    SQLITE_CHANGESET_CONFLICT = ffi::SQLITE_CHANGESET_CONFLICT,$/;"	e	enum:ConflictType
SQLITE_CHANGESET_CONSTRAINT	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    SQLITE_CHANGESET_CONSTRAINT = ffi::SQLITE_CHANGESET_CONSTRAINT,$/;"	e	enum:ConflictType
SQLITE_CHANGESET_DATA	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    SQLITE_CHANGESET_DATA = ffi::SQLITE_CHANGESET_DATA,$/;"	e	enum:ConflictType
SQLITE_CHANGESET_FOREIGN_KEY	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    SQLITE_CHANGESET_FOREIGN_KEY = ffi::SQLITE_CHANGESET_FOREIGN_KEY,$/;"	e	enum:ConflictType
SQLITE_CHANGESET_NOTFOUND	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    SQLITE_CHANGESET_NOTFOUND = ffi::SQLITE_CHANGESET_NOTFOUND,$/;"	e	enum:ConflictType
SQLITE_CHANGESET_OMIT	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    SQLITE_CHANGESET_OMIT = ffi::SQLITE_CHANGESET_OMIT,$/;"	e	enum:ConflictAction
SQLITE_CHANGESET_REPLACE	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    SQLITE_CHANGESET_REPLACE = ffi::SQLITE_CHANGESET_REPLACE,$/;"	e	enum:ConflictAction
SQLITE_DBCONFIG_DEFENSIVE	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/config.rs	/^    SQLITE_DBCONFIG_DEFENSIVE = 1010, \/\/ 3.26.0$/;"	e	enum:DbConfig
SQLITE_DBCONFIG_DQS_DDL	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/config.rs	/^    SQLITE_DBCONFIG_DQS_DDL = 1014, \/\/ 3.29.0$/;"	e	enum:DbConfig
SQLITE_DBCONFIG_DQS_DML	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/config.rs	/^    SQLITE_DBCONFIG_DQS_DML = 1013, \/\/ 3.29.0$/;"	e	enum:DbConfig
SQLITE_DBCONFIG_ENABLE_FKEY	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/config.rs	/^    SQLITE_DBCONFIG_ENABLE_FKEY = 1002,$/;"	e	enum:DbConfig
SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/config.rs	/^    SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER = 1004, \/\/ 3.12.0$/;"	e	enum:DbConfig
SQLITE_DBCONFIG_ENABLE_QPSG	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/config.rs	/^    SQLITE_DBCONFIG_ENABLE_QPSG = 1007, \/\/ 3.20.0$/;"	e	enum:DbConfig
SQLITE_DBCONFIG_ENABLE_TRIGGER	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/config.rs	/^    SQLITE_DBCONFIG_ENABLE_TRIGGER = 1003,$/;"	e	enum:DbConfig
SQLITE_DBCONFIG_ENABLE_VIEW	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/config.rs	/^    SQLITE_DBCONFIG_ENABLE_VIEW = 1015, \/\/ 3.30.0$/;"	e	enum:DbConfig
SQLITE_DBCONFIG_LEGACY_ALTER_TABLE	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/config.rs	/^    SQLITE_DBCONFIG_LEGACY_ALTER_TABLE = 1012, \/\/ 3.29$/;"	e	enum:DbConfig
SQLITE_DBCONFIG_LEGACY_FILE_FORMAT	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/config.rs	/^    SQLITE_DBCONFIG_LEGACY_FILE_FORMAT = 1016, \/\/ 3.31.0$/;"	e	enum:DbConfig
SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/config.rs	/^    SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE = 1006, \/\/ 3.16.2$/;"	e	enum:DbConfig
SQLITE_DBCONFIG_TRIGGER_EQP	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/config.rs	/^    SQLITE_DBCONFIG_TRIGGER_EQP = 1008, \/\/ 3.22.0$/;"	e	enum:DbConfig
SQLITE_DBCONFIG_TRUSTED_SCHEMA	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/config.rs	/^    SQLITE_DBCONFIG_TRUSTED_SCHEMA = 1017, \/\/ 3.31.0$/;"	e	enum:DbConfig
SQLITE_DBCONFIG_WRITABLE_SCHEMA	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/config.rs	/^    SQLITE_DBCONFIG_WRITABLE_SCHEMA = 1011, \/\/ 3.28.0$/;"	e	enum:DbConfig
SQLITE_DELETE	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/hooks.rs	/^    SQLITE_DELETE = ffi::SQLITE_DELETE,$/;"	e	enum:Action
SQLITE_INDEX_CONSTRAINT_EQ	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    SQLITE_INDEX_CONSTRAINT_EQ,$/;"	e	enum:IndexConstraintOp
SQLITE_INDEX_CONSTRAINT_FUNCTION	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    SQLITE_INDEX_CONSTRAINT_FUNCTION(u8), \/\/ 3.25.0$/;"	e	enum:IndexConstraintOp
SQLITE_INDEX_CONSTRAINT_GE	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    SQLITE_INDEX_CONSTRAINT_GE,$/;"	e	enum:IndexConstraintOp
SQLITE_INDEX_CONSTRAINT_GLOB	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    SQLITE_INDEX_CONSTRAINT_GLOB,         \/\/ 3.10.0$/;"	e	enum:IndexConstraintOp
SQLITE_INDEX_CONSTRAINT_GT	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    SQLITE_INDEX_CONSTRAINT_GT,$/;"	e	enum:IndexConstraintOp
SQLITE_INDEX_CONSTRAINT_IS	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    SQLITE_INDEX_CONSTRAINT_IS,           \/\/ 3.21.0$/;"	e	enum:IndexConstraintOp
SQLITE_INDEX_CONSTRAINT_ISNOT	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    SQLITE_INDEX_CONSTRAINT_ISNOT,        \/\/ 3.21.0$/;"	e	enum:IndexConstraintOp
SQLITE_INDEX_CONSTRAINT_ISNOTNULL	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    SQLITE_INDEX_CONSTRAINT_ISNOTNULL,    \/\/ 3.21.0$/;"	e	enum:IndexConstraintOp
SQLITE_INDEX_CONSTRAINT_ISNULL	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    SQLITE_INDEX_CONSTRAINT_ISNULL,       \/\/ 3.21.0$/;"	e	enum:IndexConstraintOp
SQLITE_INDEX_CONSTRAINT_LE	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    SQLITE_INDEX_CONSTRAINT_LE,$/;"	e	enum:IndexConstraintOp
SQLITE_INDEX_CONSTRAINT_LIKE	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    SQLITE_INDEX_CONSTRAINT_LIKE,         \/\/ 3.10.0$/;"	e	enum:IndexConstraintOp
SQLITE_INDEX_CONSTRAINT_LT	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    SQLITE_INDEX_CONSTRAINT_LT,$/;"	e	enum:IndexConstraintOp
SQLITE_INDEX_CONSTRAINT_MATCH	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    SQLITE_INDEX_CONSTRAINT_MATCH,$/;"	e	enum:IndexConstraintOp
SQLITE_INDEX_CONSTRAINT_NE	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    SQLITE_INDEX_CONSTRAINT_NE,           \/\/ 3.21.0$/;"	e	enum:IndexConstraintOp
SQLITE_INDEX_CONSTRAINT_REGEXP	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    SQLITE_INDEX_CONSTRAINT_REGEXP,       \/\/ 3.10.0$/;"	e	enum:IndexConstraintOp
SQLITE_INIT	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/inner_connection.rs	/^static SQLITE_INIT: std::sync::Once = std::sync::Once::new();$/;"	v
SQLITE_INSERT	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/hooks.rs	/^    SQLITE_INSERT = ffi::SQLITE_INSERT,$/;"	e	enum:Action
SQLITE_UPDATE	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/hooks.rs	/^    SQLITE_UPDATE = ffi::SQLITE_UPDATE,$/;"	e	enum:Action
SQLITE_VERSION_CHECK	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/inner_connection.rs	/^static SQLITE_VERSION_CHECK: std::sync::Once = std::sync::Once::new();$/;"	v
Savepoint	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^impl Deref for Savepoint<'_> {$/;"	c
Savepoint	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^impl Drop for Savepoint<'_> {$/;"	c
Savepoint	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^impl Savepoint<'_> {$/;"	c
Savepoint	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^pub struct Savepoint<'conn> {$/;"	s
Sealed	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/params.rs	/^    pub trait Sealed {}$/;"	i	module:sealed
Sealed	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^    pub trait Sealed {}$/;"	i	module:sealed
SeriesTab	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/series.rs	/^struct SeriesTab {$/;"	s
SeriesTab	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/series.rs	/^unsafe impl<'vtab> VTab<'vtab> for SeriesTab {$/;"	c
SeriesTabCursor	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/series.rs	/^impl SeriesTabCursor<'_> {$/;"	c
SeriesTabCursor	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/series.rs	/^struct SeriesTabCursor<'vtab> {$/;"	s
SeriesTabCursor	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/series.rs	/^unsafe impl VTabCursor for SeriesTabCursor<'_> {$/;"	c
Session	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^impl Drop for Session<'_> {$/;"	c
Session	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^impl Session<'_> {$/;"	c
Session	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^pub struct Session<'conn> {$/;"	s
SmallCString	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/small_cstr.rs	/^impl Default for SmallCString {$/;"	c
SmallCString	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/small_cstr.rs	/^impl PartialEq<str> for SmallCString {$/;"	c
SmallCString	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/small_cstr.rs	/^impl SmallCString {$/;"	c
SmallCString	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/small_cstr.rs	/^impl std::borrow::Borrow<str> for SmallCString {$/;"	c
SmallCString	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/small_cstr.rs	/^impl std::fmt::Debug for SmallCString {$/;"	c
SmallCString	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/small_cstr.rs	/^impl std::ops::Deref for SmallCString {$/;"	c
SmallCString	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/small_cstr.rs	/^pub(crate) struct SmallCString(smallvec::SmallVec<[u8; 16]>);$/;"	s
SomeError	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^            SomeError,$/;"	e	enum:test::query_and_then_tests::CustomError
Sort	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    Sort = 2,$/;"	e	enum:StatementStatus
Sql	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/pragma.rs	/^impl Deref for Sql {$/;"	c
Sql	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/pragma.rs	/^impl Sql {$/;"	c
Sql	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/pragma.rs	/^pub struct Sql {$/;"	s
Sqlite	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^            Sqlite(Error),$/;"	e	enum:test::query_and_then_tests::CustomError
SqliteFailure	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/error.rs	/^    SqliteFailure(ffi::Error, Option<String>),$/;"	e	enum:Error
SqliteMallocString	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/sqlite_string.rs	/^impl Drop for SqliteMallocString {$/;"	c
SqliteMallocString	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/sqlite_string.rs	/^impl SqliteMallocString {$/;"	c
SqliteMallocString	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/sqlite_string.rs	/^impl std::fmt::Debug for SqliteMallocString {$/;"	c
SqliteMallocString	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/sqlite_string.rs	/^impl std::fmt::Display for SqliteMallocString {$/;"	c
SqliteMallocString	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/sqlite_string.rs	/^pub(crate) struct SqliteMallocString {$/;"	s
SqliteSingleThreadedMode	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/error.rs	/^    SqliteSingleThreadedMode,$/;"	e	enum:Error
Statement	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/column.rs	/^impl Statement<'_> {$/;"	c
Statement	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^impl Drop for Statement<'_> {$/;"	c
Statement	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^impl Statement<'_> {$/;"	c
Statement	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^impl fmt::Debug for Statement<'_> {$/;"	c
Statement	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^pub struct Statement<'conn> {$/;"	s
StatementCache	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/cache.rs	/^    impl StatementCache {$/;"	c	module:test
StatementCache	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/cache.rs	/^impl StatementCache {$/;"	c
StatementCache	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/cache.rs	/^pub struct StatementCache(RefCell<LruCache<Arc<str>, RawStatement>>);$/;"	s
StatementChangedRows	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/error.rs	/^    StatementChangedRows(usize),$/;"	e	enum:Error
StatementStatus	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^pub enum StatementStatus {$/;"	g
StepResult	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/backup.rs	/^pub enum StepResult {$/;"	g
String	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/from_sql.rs	/^impl FromSql for String {$/;"	c
String	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/to_sql.rs	/^impl ToSql for String {$/;"	c
Sum	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^    impl Aggregate<i64, Option<i64>> for Sum {$/;"	c	module:test
Sum	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^    impl WindowAggregate<i64, Option<i64>> for Sum {$/;"	c	module:test
Sum	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^    struct Sum;$/;"	s	module:test
T	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/to_sql.rs	/^impl<T: ?Sized> ToSql for &'_ T$/;"	c
Target	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/cache.rs	/^    type Target = Statement<'conn>;$/;"	t	implementation:CachedStatement
Target	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^    type Target = Connection;$/;"	t	implementation:ConnectionRef
Target	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/pragma.rs	/^    type Target = str;$/;"	t	implementation:Sql
Target	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    type Target = Connection;$/;"	t	implementation:Savepoint
Target	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    type Target = Connection;$/;"	t	implementation:Transaction
Target	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/small_cstr.rs	/^    type Target = CStr;$/;"	t	implementation:SmallCString
Temp	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    Temp,$/;"	e	enum:DatabaseName
Text	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/mod.rs	/^    Text,$/;"	e	enum:Type
Text	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value.rs	/^    Text(String),$/;"	e	enum:Value
Text	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value_ref.rs	/^    Text(&'a [u8]),$/;"	e	enum:ValueRef
ToSql	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/params.rs	/^impl Params for &[&dyn ToSql] {$/;"	c
ToSql	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/params.rs	/^impl Params for &[(&str, &dyn ToSql)] {$/;"	c
ToSql	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/params.rs	/^impl Params for [&dyn ToSql; 0] {$/;"	c
ToSql	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/params.rs	/^impl Sealed for &[&dyn ToSql] {}$/;"	c
ToSql	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/params.rs	/^impl Sealed for &[(&str, &dyn ToSql)] {}$/;"	c
ToSql	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/params.rs	/^impl Sealed for [&dyn ToSql; 0] {}$/;"	c
ToSql	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/to_sql.rs	/^pub trait ToSql {$/;"	i
ToSqlConversionFailure	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/error.rs	/^    ToSqlConversionFailure(Box<dyn error::Error + Send + Sync + 'static>),$/;"	e	enum:Error
ToSqlOutput	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/to_sql.rs	/^impl ToSql for ToSqlOutput<'_> {$/;"	c
ToSqlOutput	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/to_sql.rs	/^impl<'a, T: ?Sized> From<&'a T> for ToSqlOutput<'a>$/;"	c
ToSqlOutput	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/to_sql.rs	/^pub enum ToSqlOutput<'a> {$/;"	g
Transaction	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^impl Deref for Transaction<'_> {$/;"	c
Transaction	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^impl Drop for Transaction<'_> {$/;"	c
Transaction	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^impl Transaction<'_> {$/;"	c
Transaction	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^pub struct Transaction<'conn> {$/;"	s
TransactionBehavior	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^pub enum TransactionBehavior {$/;"	g
Type	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/mod.rs	/^impl fmt::Display for Type {$/;"	c
Type	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/mod.rs	/^pub enum Type {$/;"	g
UNKNOWN	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/hooks.rs	/^    UNKNOWN = -1,$/;"	e	enum:Action
UNKNOWN	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    UNKNOWN = -1,$/;"	e	enum:ConflictType
UnlockNotification	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/unlock_notify.rs	/^impl UnlockNotification {$/;"	c
UnlockNotification	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/unlock_notify.rs	/^struct UnlockNotification {$/;"	s
UnwindingPanic	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/error.rs	/^    UnwindingPanic,$/;"	e	enum:Error
Url	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/url.rs	/^impl FromSql for Url {$/;"	c
Url	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/url.rs	/^impl ToSql for Url {$/;"	c
UserFunctionError	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/error.rs	/^    UserFunctionError(Box<dyn error::Error + Send + Sync + 'static>),$/;"	e	enum:Error
Utf8Error	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/error.rs	/^    Utf8Error(str::Utf8Error),$/;"	e	enum:Error
Uuid	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/from_sql.rs	/^impl FromSql for uuid::Uuid {$/;"	c
VTab	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^pub unsafe trait VTab<'vtab>: Sized {$/;"	i
VTabConnection	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^impl VTabConnection {$/;"	c
VTabConnection	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^pub struct VTabConnection(*mut ffi::sqlite3);$/;"	s
VTabCursor	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^pub unsafe trait VTabCursor: Sized {$/;"	i
Value	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/from_sql.rs	/^impl FromSql for Value {$/;"	c
Value	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/serde_json.rs	/^impl FromSql for Value {$/;"	c
Value	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/serde_json.rs	/^impl ToSql for Value {$/;"	c
Value	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/to_sql.rs	/^impl ToSql for Value {$/;"	c
Value	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value.rs	/^impl From<Null> for Value {$/;"	c
Value	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value.rs	/^impl From<String> for Value {$/;"	c
Value	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value.rs	/^impl From<Vec<u8>> for Value {$/;"	c
Value	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value.rs	/^impl From<bool> for Value {$/;"	c
Value	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value.rs	/^impl From<f32> for Value {$/;"	c
Value	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value.rs	/^impl From<f64> for Value {$/;"	c
Value	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value.rs	/^impl From<i128> for Value {$/;"	c
Value	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value.rs	/^impl From<i64> for Value {$/;"	c
Value	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value.rs	/^impl From<isize> for Value {$/;"	c
Value	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value.rs	/^impl From<uuid::Uuid> for Value {$/;"	c
Value	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value.rs	/^impl Value {$/;"	c
Value	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value.rs	/^impl<T> From<Option<T>> for Value$/;"	c
Value	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value.rs	/^pub enum Value {$/;"	g
Value	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value_ref.rs	/^impl From<ValueRef<'_>> for Value {$/;"	c
ValueIter	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^impl<'a> Iterator for ValueIter<'a> {$/;"	c
ValueIter	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^pub struct ValueIter<'a> {$/;"	s
ValueRef	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value_ref.rs	/^impl ValueRef<'_> {$/;"	c
ValueRef	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value_ref.rs	/^impl<'a, T> From<Option<T>> for ValueRef<'a>$/;"	c
ValueRef	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value_ref.rs	/^impl<'a> From<&'a Value> for ValueRef<'a> {$/;"	c
ValueRef	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value_ref.rs	/^impl<'a> From<&'a [u8]> for ValueRef<'a> {$/;"	c
ValueRef	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value_ref.rs	/^impl<'a> From<&'a str> for ValueRef<'a> {$/;"	c
ValueRef	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value_ref.rs	/^impl<'a> ValueRef<'a> {$/;"	c
ValueRef	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value_ref.rs	/^pub enum ValueRef<'a> {$/;"	g
Values	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^impl Values<'_> {$/;"	c
Values	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^impl<'a> IntoIterator for &'a Values<'a> {$/;"	c
Values	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^pub struct Values<'a> {$/;"	s
Vec	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/from_sql.rs	/^impl FromSql for Vec<u8> {$/;"	c
Vec	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/to_sql.rs	/^impl ToSql for Vec<u8> {$/;"	c
VmStep	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    VmStep = 4,$/;"	e	enum:StatementStatus
WindowAggregate	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^pub trait WindowAggregate<A, T>: Aggregate<A, T>$/;"	i
ZeroBlob	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/blob/mod.rs	/^impl ToSql for ZeroBlob {$/;"	c
ZeroBlob	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/blob/mod.rs	/^pub struct ZeroBlob(pub i32);$/;"	s
ZeroBlob	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/to_sql.rs	/^    ZeroBlob(i32),$/;"	e	enum:ToSqlOutput
__bind_in	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/params.rs	/^    fn __bind_in(self, stmt: &mut Statement<'_>) -> Result<()> {$/;"	P	implementation:ToSql
__bind_in	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/params.rs	/^    fn __bind_in(self, stmt: &mut Statement<'_>) -> Result<()> {$/;"	f
__bind_in	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/params.rs	/^    fn __bind_in(self, stmt: &mut Statement<'_>) -> Result<()>;$/;"	P	interface:Params
_boo	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/sqlite_string.rs	/^    _boo: PhantomData<Box<[c_char]>>,$/;"	m	struct:SqliteMallocString
add	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    pub fn add(&mut self, cs: &Changeset) -> Result<()> {$/;"	P	implementation:Changegroup
add_stream	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    pub fn add_stream(&mut self, input: &mut dyn Read) -> Result<()> {$/;"	P	implementation:Changegroup
advance	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^    fn advance(&mut self) -> Result<()> {$/;"	P	implementation:Rows
advance	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    fn advance(&mut self) -> Result<()> {$/;"	P	implementation:ChangesetIter
aggregate_context	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^unsafe fn aggregate_context<A>(ctx: *mut sqlite3_context, bytes: usize) -> Option<*mut *mut A> {$/;"	f
alloc	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^fn alloc(s: &str) -> *mut c_char {$/;"	f
and_then	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^    pub fn and_then<F, T, E>(self, f: F) -> AndThenRows<'stmt, F>$/;"	P	implementation:Rows
apply	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    pub fn apply<F, C>(&self, cs: &Changeset, filter: Option<F>, conflict: C) -> Result<()>$/;"	P	implementation:Connection
apply_strm	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    pub fn apply_strm<F, C>($/;"	P	implementation:Connection
args	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^    args: &'a [*mut sqlite3_value],$/;"	m	struct:Context
args	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    args: &'a [*mut ffi::sqlite3_value],$/;"	m	struct:Values
array	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^pub mod array;$/;"	n
as_blob	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value_ref.rs	/^    pub fn as_blob(&self) -> FromSqlResult<&'a [u8]> {$/;"	P	implementation:ValueRef
as_bytes_with_nul	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/small_cstr.rs	/^    pub fn as_bytes_with_nul(&self) -> &[u8] {$/;"	P	implementation:SmallCString
as_bytes_without_nul	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/small_cstr.rs	/^    pub fn as_bytes_without_nul(&self) -> &[u8] {$/;"	P	implementation:SmallCString
as_cstr	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/small_cstr.rs	/^    pub fn as_cstr(&self) -> &CStr {$/;"	P	implementation:SmallCString
as_cstr	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/sqlite_string.rs	/^    pub(crate) fn as_cstr(&self) -> &std::ffi::CStr {$/;"	P	implementation:SqliteMallocString
as_f64	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value_ref.rs	/^    pub fn as_f64(&self) -> FromSqlResult<f64> {$/;"	P	implementation:ValueRef
as_i64	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value_ref.rs	/^    pub fn as_i64(&self) -> FromSqlResult<i64> {$/;"	P	implementation:ValueRef
as_ptr	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/sqlite_string.rs	/^    pub(crate) fn as_ptr(&self) -> *const c_char {$/;"	P	implementation:SqliteMallocString
as_str	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/pragma.rs	/^    pub fn as_str(&self) -> &str {$/;"	P	implementation:Sql
as_str	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value_ref.rs	/^    pub fn as_str(&self) -> FromSqlResult<&'a str> {$/;"	P	implementation:ValueRef
as_str	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/small_cstr.rs	/^    pub fn as_str(&self) -> &str {$/;"	P	implementation:SmallCString
assert_current_sum	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    fn assert_current_sum(x: i32, conn: &Connection) -> Result<()> {$/;"	f	module:test
assert_nested_tx_error	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    fn assert_nested_tx_error(e: crate::Error) {$/;"	f	module:test
attach	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    pub fn attach(&mut self, table: Option<&str>) -> Result<()> {$/;"	P	implementation:Session
b	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/backup.rs	/^    b: *mut ffi::sqlite3_backup,$/;"	m	struct:Backup
backup	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/backup.rs	/^    pub fn backup<P: AsRef<Path>>($/;"	P	implementation:Connection
backup	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^pub mod backup;$/;"	n
base	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/array.rs	/^    base: ffi::sqlite3_vtab,$/;"	m	struct:ArrayTab
base	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/array.rs	/^    base: ffi::sqlite3_vtab_cursor,$/;"	m	struct:ArrayTabCursor
base	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/csvtab.rs	/^    base: ffi::sqlite3_vtab,$/;"	m	struct:CsvTab
base	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/csvtab.rs	/^    base: ffi::sqlite3_vtab_cursor,$/;"	m	struct:CsvTabCursor
base	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    base: ffi::sqlite3_module,$/;"	m	struct:Module
base	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/series.rs	/^    base: ffi::sqlite3_vtab,$/;"	m	struct:SeriesTab
base	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/series.rs	/^    base: ffi::sqlite3_vtab_cursor,$/;"	m	struct:SeriesTabCursor
best_index	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/array.rs	/^    fn best_index(&self, info: &mut IndexInfo) -> Result<()> {$/;"	P	implementation:ArrayTab
best_index	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/csvtab.rs	/^    fn best_index(&self, info: &mut IndexInfo) -> Result<()> {$/;"	P	implementation:CsvTab
best_index	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    fn best_index(&self, info: &mut IndexInfo) -> Result<()>;$/;"	P	interface:VTab
best_index	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/series.rs	/^    fn best_index(&self, info: &mut IndexInfo) -> Result<()> {$/;"	P	implementation:SeriesTab
bind_parameter	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    fn bind_parameter<P: ?Sized + ToSql>(&self, param: &P, col: usize) -> Result<()> {$/;"	P	implementation:Statement
bind_parameter_count	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/raw_statement.rs	/^    pub fn bind_parameter_count(&self) -> usize {$/;"	P	implementation:RawStatement
bind_parameter_index	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/raw_statement.rs	/^    pub fn bind_parameter_index(&self, name: &str) -> Option<usize> {$/;"	P	implementation:RawStatement
bind_parameter_name	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/raw_statement.rs	/^    pub fn bind_parameter_name(&self, index: i32) -> Option<&CStr> {$/;"	P	implementation:RawStatement
bind_parameters	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    pub(crate) fn bind_parameters<P>(&mut self, params: P) -> Result<()>$/;"	P	implementation:Statement
bind_parameters_named	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    pub(crate) fn bind_parameters_named<T: ?Sized + ToSql>($/;"	P	implementation:Statement
blob	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/blob/mod.rs	/^    blob: *mut ffi::sqlite3_blob,$/;"	m	struct:Blob
blob	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^pub mod blob;$/;"	n
blob_open	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/blob/mod.rs	/^    pub fn blob_open<'a>($/;"	P	implementation:Connection
bool	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/from_sql.rs	/^impl FromSql for bool {$/;"	c
borrow	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/small_cstr.rs	/^    fn borrow(&self) -> &str {$/;"	P	implementation:SmallCString
buf	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/pragma.rs	/^    buf: String,$/;"	m	struct:Sql
busy	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^mod busy;$/;"	n
busy_handler	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/busy.rs	/^        fn busy_handler(_: i32) -> bool {$/;"	f	function:test::test_busy_handler
busy_handler	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/busy.rs	/^    pub fn busy_handler(&self, callback: Option<fn(i32) -> bool>) -> Result<()> {$/;"	P	implementation:Connection
busy_handler_callback	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/busy.rs	/^        unsafe extern "C" fn busy_handler_callback(p_arg: *mut c_void, count: c_int) -> c_int {$/;"	f	method:Connection::busy_handler
busy_timeout	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/busy.rs	/^    fn busy_timeout(&mut self, timeout: c_int) -> Result<()> {$/;"	P	implementation:InnerConnection
busy_timeout	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/busy.rs	/^    pub fn busy_timeout(&self, timeout: Duration) -> Result<()> {$/;"	P	implementation:Connection
bypass_sqlite_initialization	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^pub unsafe fn bypass_sqlite_initialization() {$/;"	f
bypass_sqlite_version_check	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^pub unsafe fn bypass_sqlite_version_check() {$/;"	f
cache	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/cache.rs	/^    cache: &'conn StatementCache,$/;"	m	struct:CachedStatement
cache	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    cache: StatementCache,$/;"	m	struct:Connection
cache	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^mod cache;$/;"	n
cache	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/raw_statement.rs	/^    cache: crate::util::ParamIndexCache,$/;"	m	struct:RawStatement
cache_stmt	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/cache.rs	/^    fn cache_stmt(&self, stmt: RawStatement) {$/;"	P	implementation:StatementCache
call_boxed_closure	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/collation.rs	/^        unsafe extern "C" fn call_boxed_closure<C>($/;"	f	method:InnerConnection::create_collation
call_boxed_closure	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^        unsafe extern "C" fn call_boxed_closure<F, T>($/;"	f	method:InnerConnection::create_scalar_function
call_boxed_closure	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/hooks.rs	/^        unsafe extern "C" fn call_boxed_closure<F>($/;"	f	method:InnerConnection::update_hook
call_boxed_closure	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/hooks.rs	/^        unsafe extern "C" fn call_boxed_closure<F>(p_arg: *mut c_void) -> c_int$/;"	f	method:InnerConnection::commit_hook
call_boxed_closure	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/hooks.rs	/^        unsafe extern "C" fn call_boxed_closure<F>(p_arg: *mut c_void) -> c_int$/;"	f	method:InnerConnection::progress_handler
call_boxed_closure	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/hooks.rs	/^        unsafe extern "C" fn call_boxed_closure<F>(p_arg: *mut c_void)$/;"	f	method:InnerConnection::rollback_hook
call_boxed_closure	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^        unsafe extern "C" fn call_boxed_closure<F>($/;"	f	method:Session::table_filter
call_boxed_final	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^unsafe extern "C" fn call_boxed_final<A, D, T>(ctx: *mut sqlite3_context)$/;"	f
call_boxed_inverse	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^unsafe extern "C" fn call_boxed_inverse<A, W, T>($/;"	f
call_boxed_step	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^unsafe extern "C" fn call_boxed_step<A, D, T>($/;"	f
call_boxed_value	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^unsafe extern "C" fn call_boxed_value<A, W, T>(ctx: *mut sqlite3_context)$/;"	f
call_conflict	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^unsafe extern "C" fn call_conflict<F, C>($/;"	f
call_filter	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^unsafe extern "C" fn call_filter<F, C>(p_ctx: *mut c_void, tbl_str: *const c_char) -> c_int$/;"	f
capacity	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/cache.rs	/^        fn capacity(&self) -> usize {$/;"	P	implementation:test::StatementCache
cause	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^            fn cause(&self) -> Option<&dyn StdError> {$/;"	P	implementation:test::query_and_then_tests::CustomError
cg	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    cg: *mut ffi::sqlite3_changegroup,$/;"	m	struct:Changegroup
changes	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/inner_connection.rs	/^    pub fn changes(&mut self) -> usize {$/;"	P	implementation:InnerConnection
changes	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    fn changes(&self) -> usize {$/;"	P	implementation:Connection
changeset	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    pub fn changeset(&mut self) -> Result<Changeset> {$/;"	P	implementation:Session
changeset_strm	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    pub fn changeset_strm(&mut self, output: &mut dyn Write) -> Result<()> {$/;"	P	implementation:Session
check	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/error.rs	/^macro_rules! check {$/;"	M
check_extended_code	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^        fn check_extended_code(_extended_code: c_int) {}$/;"	f	function:test::test_notnull_constraint_error
check_extended_code	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^        fn check_extended_code(extended_code: c_int) {$/;"	f	function:test::test_notnull_constraint_error
check_no_tail	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    pub(crate) fn check_no_tail(&self) -> Result<()> {$/;"	P	implementation:Statement
check_ranges	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/from_sql.rs	/^        fn check_ranges<T>(db: &Connection, out_of_range: &[i64], in_range: &[i64])$/;"	f	function:test::test_integral_ranges
check_update	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    fn check_update(&self) -> Result<()> {$/;"	P	implementation:Statement
checked_memory_handle	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    pub fn checked_memory_handle() -> Connection {$/;"	f	module:test
checked_memory_handle	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    fn checked_memory_handle() -> Result<Connection> {$/;"	f	module:test
checked_memory_handle	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/chrono.rs	/^    fn checked_memory_handle() -> Result<Connection> {$/;"	f	module:test
checked_memory_handle	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/mod.rs	/^    fn checked_memory_handle() -> Result<Connection> {$/;"	f	module:test
checked_memory_handle	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/serde_json.rs	/^    fn checked_memory_handle() -> Result<Connection> {$/;"	f	module:test
checked_memory_handle	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/time.rs	/^    fn checked_memory_handle() -> Result<Connection> {$/;"	f	module:test
checked_memory_handle	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/url.rs	/^    fn checked_memory_handle() -> Result<Connection> {$/;"	f	module:test
chrono	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/mod.rs	/^mod chrono;$/;"	n
clear	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/cache.rs	/^        fn clear(&self) {$/;"	P	implementation:test::StatementCache
clear_bindings	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/raw_statement.rs	/^    pub fn clear_bindings(&self) -> c_int {$/;"	P	implementation:RawStatement
close	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/blob/mod.rs	/^    pub fn close(mut self) -> Result<()> {$/;"	P	implementation:Blob
close	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/inner_connection.rs	/^    pub fn close(&mut self) -> Result<()> {$/;"	P	implementation:InnerConnection
close	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    pub fn close(self) -> Result<(), (Connection, Error)> {$/;"	P	implementation:Connection
close_	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/blob/mod.rs	/^    fn close_(&mut self) -> Result<()> {$/;"	P	implementation:Blob
close_brace	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/pragma.rs	/^    pub fn close_brace(&mut self) {$/;"	P	implementation:Sql
code	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    code: Action,$/;"	m	struct:Operation
code	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    pub fn code(&self) -> Action {$/;"	P	implementation:Operation
collate	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/collation.rs	/^    fn collate(db: Connection) -> Result<()> {$/;"	f	module:test
collation	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^mod collation;$/;"	n
collation_needed	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/collation.rs	/^    fn collation_needed($/;"	P	implementation:InnerConnection
collation_needed	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/collation.rs	/^    fn collation_needed(db: &Connection, collation_name: &str) -> Result<()> {$/;"	f	module:test
collation_needed	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/collation.rs	/^    pub fn collation_needed($/;"	P	implementation:Connection
collation_needed_callback	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/collation.rs	/^        unsafe extern "C" fn collation_needed_callback($/;"	f	method:InnerConnection::collation_needed
cols	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/csvtab.rs	/^    cols: csv::StringRecord,$/;"	m	struct:CsvTabCursor
column	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^mod column;$/;"	n
column	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/array.rs	/^    fn column(&self, ctx: &mut Context, i: c_int) -> Result<()> {$/;"	P	implementation:ArrayTabCursor
column	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/csvtab.rs	/^    fn column(&self, ctx: &mut Context, col: c_int) -> Result<()> {$/;"	P	implementation:CsvTabCursor
column	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    fn column(&self, ctx: &mut Context, i: c_int) -> Result<()>;$/;"	P	interface:VTabCursor
column	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    pub fn column(&self) -> c_int {$/;"	P	implementation:IndexConstraint
column	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    pub fn column(&self) -> c_int {$/;"	P	implementation:OrderBy
column	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/series.rs	/^    fn column(&self, ctx: &mut Context, i: c_int) -> Result<()> {$/;"	P	implementation:SeriesTabCursor
column_count	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/column.rs	/^    pub fn column_count(&self) -> Option<usize> {$/;"	P	implementation:Rows
column_count	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/column.rs	/^    pub fn column_count(&self) -> usize {$/;"	P	implementation:Row
column_count	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/column.rs	/^    pub fn column_count(&self) -> usize {$/;"	P	implementation:Statement
column_count	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/raw_statement.rs	/^    pub fn column_count(&self) -> usize {$/;"	P	implementation:RawStatement
column_decltype	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/raw_statement.rs	/^    pub fn column_decltype(&self, idx: usize) -> Option<&CStr> {$/;"	P	implementation:RawStatement
column_index	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/column.rs	/^    pub fn column_index(&self, name: &str) -> Option<Result<usize>> {$/;"	P	implementation:Rows
column_index	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/column.rs	/^    pub fn column_index(&self, name: &str) -> Result<usize> {$/;"	P	implementation:Row
column_index	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/column.rs	/^    pub fn column_index(&self, name: &str) -> Result<usize> {$/;"	P	implementation:Statement
column_name	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/column.rs	/^    pub fn column_name(&self, col: usize) -> Option<Result<&str>> {$/;"	P	implementation:Rows
column_name	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/column.rs	/^    pub fn column_name(&self, col: usize) -> Result<&str> {$/;"	P	implementation:Row
column_name	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/column.rs	/^    pub fn column_name(&self, col: usize) -> Result<&str> {$/;"	P	implementation:Statement
column_name	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/raw_statement.rs	/^    pub fn column_name(&self, idx: usize) -> Option<&CStr> {$/;"	P	implementation:RawStatement
column_name_unwrap	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/column.rs	/^    pub(super) fn column_name_unwrap(&self, col: usize) -> &str {$/;"	P	implementation:Statement
column_names	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/column.rs	/^    pub fn column_names(&self) -> Option<Vec<&str>> {$/;"	P	implementation:Rows
column_names	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/column.rs	/^    pub fn column_names(&self) -> Vec<&str> {$/;"	P	implementation:Row
column_names	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/column.rs	/^    pub fn column_names(&self) -> Vec<&str> {$/;"	P	implementation:Statement
column_result	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/chrono.rs	/^    fn column_result(value: ValueRef<'_>) -> FromSqlResult<Self> {$/;"	P	implementation:DateTime
column_result	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/chrono.rs	/^    fn column_result(value: ValueRef<'_>) -> FromSqlResult<Self> {$/;"	P	implementation:NaiveDate
column_result	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/chrono.rs	/^    fn column_result(value: ValueRef<'_>) -> FromSqlResult<Self> {$/;"	P	implementation:NaiveDateTime
column_result	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/chrono.rs	/^    fn column_result(value: ValueRef<'_>) -> FromSqlResult<Self> {$/;"	P	implementation:NaiveTime
column_result	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/from_sql.rs	/^    fn column_result(value: ValueRef<'_>) -> FromSqlResult<Self> {$/;"	P	implementation:Arc
column_result	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/from_sql.rs	/^    fn column_result(value: ValueRef<'_>) -> FromSqlResult<Self> {$/;"	P	implementation:Box
column_result	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/from_sql.rs	/^    fn column_result(value: ValueRef<'_>) -> FromSqlResult<Self> {$/;"	P	implementation:Option
column_result	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/from_sql.rs	/^    fn column_result(value: ValueRef<'_>) -> FromSqlResult<Self> {$/;"	P	implementation:Rc
column_result	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/from_sql.rs	/^    fn column_result(value: ValueRef<'_>) -> FromSqlResult<Self> {$/;"	P	implementation:String
column_result	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/from_sql.rs	/^    fn column_result(value: ValueRef<'_>) -> FromSqlResult<Self> {$/;"	P	implementation:Uuid
column_result	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/from_sql.rs	/^    fn column_result(value: ValueRef<'_>) -> FromSqlResult<Self> {$/;"	P	implementation:Value
column_result	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/from_sql.rs	/^    fn column_result(value: ValueRef<'_>) -> FromSqlResult<Self> {$/;"	P	implementation:Vec
column_result	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/from_sql.rs	/^    fn column_result(value: ValueRef<'_>) -> FromSqlResult<Self> {$/;"	P	implementation:bool
column_result	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/from_sql.rs	/^    fn column_result(value: ValueRef<'_>) -> FromSqlResult<Self> {$/;"	P	implementation:f32
column_result	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/from_sql.rs	/^    fn column_result(value: ValueRef<'_>) -> FromSqlResult<Self> {$/;"	P	implementation:f64
column_result	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/from_sql.rs	/^    fn column_result(value: ValueRef<'_>) -> FromSqlResult<Self> {$/;"	P	implementation:i128
column_result	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/from_sql.rs	/^    fn column_result(value: ValueRef<'_>) -> FromSqlResult<Self> {$/;"	P	implementation:i64
column_result	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/from_sql.rs	/^    fn column_result(value: ValueRef<'_>) -> FromSqlResult<Self>;$/;"	P	interface:FromSql
column_result	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/serde_json.rs	/^    fn column_result(value: ValueRef<'_>) -> FromSqlResult<Self> {$/;"	P	implementation:Value
column_result	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/time.rs	/^    fn column_result(value: ValueRef<'_>) -> FromSqlResult<Self> {$/;"	P	implementation:OffsetDateTime
column_result	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/url.rs	/^    fn column_result(value: ValueRef<'_>) -> FromSqlResult<Self> {$/;"	P	implementation:Url
column_type	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/raw_statement.rs	/^    pub fn column_type(&self, idx: usize) -> c_int {$/;"	P	implementation:RawStatement
columns	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/column.rs	/^    pub fn columns(&self) -> Option<Vec<Column>> {$/;"	P	implementation:Rows
columns	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/column.rs	/^    pub fn columns(&self) -> Vec<Column> {$/;"	P	implementation:Row
columns	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/column.rs	/^    pub fn columns(&self) -> Vec<Column> {$/;"	P	implementation:Statement
commit	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    pub fn commit(mut self) -> Result<()> {$/;"	P	implementation:Savepoint
commit	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    pub fn commit(mut self) -> Result<()> {$/;"	P	implementation:Transaction
commit_	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    fn commit_(&mut self) -> Result<()> {$/;"	P	implementation:Savepoint
commit_	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    fn commit_(&mut self) -> Result<()> {$/;"	P	implementation:Transaction
commit_hook	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/hooks.rs	/^    fn commit_hook<'c, F>(&'c mut self, hook: Option<F>)$/;"	P	implementation:InnerConnection
commit_hook	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/hooks.rs	/^    pub fn commit_hook<'c, F>(&'c self, hook: Option<F>)$/;"	P	implementation:Connection
committed	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    committed: bool,$/;"	m	struct:Savepoint
concat	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    pub fn concat(a: &Changeset, b: &Changeset) -> Result<Changeset> {$/;"	P	implementation:Changeset
concat_strm	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^pub fn concat_strm($/;"	f
cond	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/unlock_notify.rs	/^    cond: Condvar,      \/\/ Condition variable to wait on$/;"	m	struct:UnlockNotification
config	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^pub mod config;$/;"	n
config_log	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/trace.rs	/^pub unsafe fn config_log(callback: Option<fn(c_int, &str)>) -> Result<()> {$/;"	f
conflict	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    pub fn conflict(&self, col: usize) -> Result<ValueRef<'_>> {$/;"	P	implementation:ChangesetItem
conn	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/blob/mod.rs	/^    conn: &'conn Connection,$/;"	m	struct:Blob
conn	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^    conn: Connection,$/;"	m	struct:ConnectionRef
conn	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    conn: &'conn Connection,$/;"	m	struct:Batch
conn	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/load_extension_guard.rs	/^    conn: &'conn Connection,$/;"	m	struct:LoadExtensionGuard
conn	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    conn: &'conn Connection,$/;"	m	struct:Statement
conn	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    conn: &'conn Connection,$/;"	m	struct:Savepoint
conn	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    conn: &'conn Connection,$/;"	m	struct:Transaction
connect	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/array.rs	/^    fn connect($/;"	P	implementation:ArrayTab
connect	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/csvtab.rs	/^    fn connect($/;"	P	implementation:CsvTab
connect	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    fn connect($/;"	P	interface:VTab
connect	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/series.rs	/^    fn connect($/;"	P	implementation:SeriesTab
constraint_error_code	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^    fn constraint_error_code() -> i32 {$/;"	f	function:report_error
constraint_usage	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    pub fn constraint_usage(&mut self, constraint_idx: usize) -> IndexConstraintUsage<'_> {$/;"	P	implementation:IndexInfo
constraints	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    pub fn constraints(&self) -> IndexConstraintIter<'_> {$/;"	P	implementation:IndexInfo
context	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^mod context;$/;"	n
create	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    fn create($/;"	P	interface:CreateVTab
create_aggregate_function	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^    fn create_aggregate_function<A, D, T>($/;"	P	implementation:InnerConnection
create_aggregate_function	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^    pub fn create_aggregate_function<A, D, T>($/;"	P	implementation:Connection
create_collation	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/collation.rs	/^    fn create_collation<'c, C>(&'c mut self, collation_name: &str, x_compare: C) -> Result<()>$/;"	P	implementation:InnerConnection
create_collation	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/collation.rs	/^    pub fn create_collation<'c, C>(&'c self, collation_name: &str, x_compare: C) -> Result<()>$/;"	P	implementation:Connection
create_module	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    fn create_module<'vtab, T: VTab<'vtab>>($/;"	P	implementation:InnerConnection
create_module	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    pub fn create_module<'vtab, T: VTab<'vtab>>($/;"	P	implementation:Connection
create_scalar_function	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^    fn create_scalar_function<'c, F, T>($/;"	P	implementation:InnerConnection
create_scalar_function	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^    pub fn create_scalar_function<'c, F, T>($/;"	P	implementation:Connection
create_window_function	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^    fn create_window_function<A, W, T>($/;"	P	implementation:InnerConnection
create_window_function	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^    pub fn create_window_function<A, W, T>($/;"	P	implementation:Connection
cs	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    cs: *mut c_void,$/;"	m	struct:Changeset
csvtab	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^pub mod csvtab;$/;"	n
ctx	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^    ctx: *mut sqlite3_context,$/;"	m	struct:Context
cursor_error	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^unsafe fn cursor_error<T>(cursor: *mut ffi::sqlite3_vtab_cursor, result: Result<T>) -> c_int {$/;"	f
data	/home/cht/Rust/wssfinal/database/src/lib.rs	/^    data: Option<Vec<u8>>,$/;"	m	struct:Person
data	/home/cht/Rust/wssfinal/database/src/lib.rs	/^pub fn data(msg:String) -> Result<Vec<String>> {$/;"	f
data_type	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value.rs	/^    pub fn data_type(&self) -> Type {$/;"	P	implementation:Value
data_type	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value_ref.rs	/^    pub fn data_type(&self) -> Type {$/;"	P	implementation:ValueRef
db	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/inner_connection.rs	/^    pub db: *mut ffi::sqlite3,$/;"	m	struct:InnerConnection
db	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/inner_connection.rs	/^    pub fn db(&self) -> *mut ffi::sqlite3 {$/;"	P	implementation:InnerConnection
db	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    db: RefCell<InnerConnection>,$/;"	m	struct:Connection
db_config	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/config.rs	/^    pub fn db_config(&self, config: DbConfig) -> Result<bool> {$/;"	P	implementation:Connection
db_filename	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^unsafe fn db_filename(_: *mut ffi::sqlite3) -> Option<PathBuf> {$/;"	f
db_filename	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^unsafe fn db_filename(db: *mut ffi::sqlite3) -> Option<PathBuf> {$/;"	f
db_lock	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    db_lock: Arc<Mutex<*mut ffi::sqlite3>>,$/;"	m	struct:InterruptHandle
db_with_test_blob	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/blob/mod.rs	/^    fn db_with_test_blob() -> Result<(Connection, i64)> {$/;"	f	module:test
debug_checks	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/small_cstr.rs	/^    fn debug_checks(&self) {$/;"	P	implementation:SmallCString
debug_checks	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/small_cstr.rs	/^    fn debug_checks(&self) {}$/;"	P	implementation:SmallCString
decl_type	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/column.rs	/^    decl_type: Option<&'stmt str>,$/;"	m	struct:Column
decl_type	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/column.rs	/^    pub fn decl_type(&self) -> Option<&str> {$/;"	P	implementation:Column
decode_result	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/inner_connection.rs	/^    pub fn decode_result(&mut self, code: c_int) -> Result<()> {$/;"	P	implementation:InnerConnection
decode_result	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    fn decode_result(&self, code: c_int) -> Result<()> {$/;"	P	implementation:Connection
decode_result_raw	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/inner_connection.rs	/^    unsafe fn decode_result_raw(db: *mut ffi::sqlite3, code: c_int) -> Result<()> {$/;"	P	implementation:InnerConnection
default	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^    fn default() -> FunctionFlags {$/;"	P	implementation:FunctionFlags
default	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    fn default() -> OpenFlags {$/;"	P	implementation:OpenFlags
default	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/small_cstr.rs	/^    fn default() -> Self {$/;"	P	implementation:SmallCString
delete_statement	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/mod.rs	/^            delete_statement: Statement<'conn>,$/;"	m	struct:test::test_numeric_conversions::DbEtc
delimiter	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/csvtab.rs	/^    delimiter: u8,$/;"	m	struct:CsvTab
depth	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    depth: u32,$/;"	m	struct:Savepoint
dequote	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^pub fn dequote(s: &str) -> &str {$/;"	f
deref	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/cache.rs	/^    fn deref(&self) -> &Statement<'conn> {$/;"	P	implementation:CachedStatement
deref	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^    fn deref(&self) -> &Connection {$/;"	P	implementation:ConnectionRef
deref	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/pragma.rs	/^    fn deref(&self) -> &str {$/;"	P	implementation:Sql
deref	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    fn deref(&self) -> &Connection {$/;"	P	implementation:Savepoint
deref	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    fn deref(&self) -> &Connection {$/;"	P	implementation:Transaction
deref	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/small_cstr.rs	/^    fn deref(&self) -> &CStr {$/;"	P	implementation:SmallCString
deref_mut	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/cache.rs	/^    fn deref_mut(&mut self) -> &mut Statement<'conn> {$/;"	P	implementation:CachedStatement
description	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^            fn description(&self) -> &str {$/;"	P	implementation:test::query_and_then_tests::CustomError
destroy	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    fn destroy(&self) -> Result<()> {$/;"	P	interface:CreateVTab
diff	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    pub fn diff(&mut self, from: DatabaseName<'_>, table: &str) -> Result<()> {$/;"	P	implementation:Session
discard	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/cache.rs	/^    pub fn discard(mut self) {$/;"	P	implementation:CachedStatement
double_quote	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/pragma.rs	/^    fn double_quote() {$/;"	f	module:test
drop	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/backup.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Backup
drop	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/blob/mod.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Blob
drop	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/cache.rs	/^    fn drop(&mut self) {$/;"	P	implementation:CachedStatement
drop	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/inner_connection.rs	/^    fn drop(&mut self) {$/;"	P	implementation:InnerConnection
drop	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Connection
drop	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/load_extension_guard.rs	/^    fn drop(&mut self) {$/;"	P	implementation:LoadExtensionGuard
drop	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/raw_statement.rs	/^    fn drop(&mut self) {$/;"	P	implementation:RawStatement
drop	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Rows
drop	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Changegroup
drop	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Changeset
drop	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    fn drop(&mut self) {$/;"	P	implementation:ChangesetIter
drop	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Session
drop	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Statement
drop	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Savepoint
drop	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Transaction
drop	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/sqlite_string.rs	/^    fn drop(&mut self) {$/;"	P	implementation:SqliteMallocString
drop_behavior	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    drop_behavior: DropBehavior,$/;"	m	struct:Savepoint
drop_behavior	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    drop_behavior: DropBehavior,$/;"	m	struct:Transaction
drop_behavior	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    pub fn drop_behavior(&self) -> DropBehavior {$/;"	P	implementation:Savepoint
drop_behavior	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    pub fn drop_behavior(&self) -> DropBehavior {$/;"	P	implementation:Transaction
enable_load_extension	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/inner_connection.rs	/^    pub fn enable_load_extension(&mut self, onoff: c_int) -> Result<()> {$/;"	P	implementation:InnerConnection
ensure_safe_sqlite_threading_mode	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/inner_connection.rs	/^fn ensure_safe_sqlite_threading_mode() -> Result<()> {$/;"	f
ensure_send	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    fn ensure_send<T: Send>() {$/;"	f	module:test
ensure_sync	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    fn ensure_sync<T: Sync>() {$/;"	f	module:test
ensure_valid_sqlite_version	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/inner_connection.rs	/^fn ensure_valid_sqlite_version() {$/;"	f
eof	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/array.rs	/^    fn eof(&self) -> bool {$/;"	P	implementation:ArrayTabCursor
eof	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/csvtab.rs	/^    eof: bool,$/;"	m	struct:CsvTabCursor
eof	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/csvtab.rs	/^    fn eof(&self) -> bool {$/;"	P	implementation:CsvTabCursor
eof	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    fn eof(&self) -> bool;$/;"	P	interface:VTabCursor
eof	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/series.rs	/^    fn eof(&self) -> bool {$/;"	P	implementation:SeriesTabCursor
eponymous_only_module	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^pub fn eponymous_only_module<'vtab, T: VTab<'vtab>>() -> &'static Module<'vtab, T> {$/;"	f
eq	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/error.rs	/^    fn eq(&self, other: &Error) -> bool {$/;"	P	implementation:Error
eq	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/from_sql.rs	/^    fn eq(&self, other: &FromSqlError) -> bool {$/;"	P	implementation:FromSqlError
eq	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/small_cstr.rs	/^    fn eq(&self, s: &SmallCString) -> bool {$/;"	P	implementation:str
eq	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/small_cstr.rs	/^    fn eq(&self, s: &str) -> bool {$/;"	P	implementation:SmallCString
errmsg_to_string	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^unsafe fn errmsg_to_string(errmsg: *const c_char) -> String {$/;"	f
error	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^mod error;$/;"	n
error_from_handle	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/error.rs	/^pub unsafe fn error_from_handle(db: *mut ffi::sqlite3, code: c_int) -> Error {$/;"	f
error_from_sqlite_code	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/error.rs	/^pub fn error_from_sqlite_code(code: c_int, message: Option<String>) -> Error {$/;"	f
escape_double_quote	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^pub fn escape_double_quote(identifier: &str) -> Cow<'_, str> {$/;"	f
execute	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    pub fn execute<P: Params>(&self, sql: &str, params: P) -> Result<usize> {$/;"	P	implementation:Connection
execute	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    pub fn execute<P: Params>(&mut self, params: P) -> Result<usize> {$/;"	P	implementation:Statement
execute_batch	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    pub fn execute_batch(&self, sql: &str) -> Result<()> {$/;"	P	implementation:Connection
execute_named	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    pub fn execute_named(&self, sql: &str, params: &[(&str, &dyn ToSql)]) -> Result<usize> {$/;"	P	implementation:Connection
execute_named	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    pub fn execute_named(&mut self, params: &[(&str, &dyn ToSql)]) -> Result<usize> {$/;"	P	implementation:Statement
execute_with_bound_parameters	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    fn execute_with_bound_parameters(&mut self) -> Result<usize> {$/;"	P	implementation:Statement
exists	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    pub fn exists<P: Params>(&mut self, params: P) -> Result<bool> {$/;"	P	implementation:Statement
expanded_sql	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/raw_statement.rs	/^    pub(crate) fn expanded_sql(&self) -> Option<SqliteMallocString> {$/;"	P	implementation:RawStatement
expanded_sql	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    pub fn expanded_sql(&self) -> Option<String> {$/;"	P	implementation:Statement
f	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^    f: F,$/;"	m	struct:Map
f32	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/from_sql.rs	/^impl FromSql for f32 {$/;"	c
f64	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/from_sql.rs	/^impl FromSql for f64 {$/;"	c
fabricate_nul_error	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/small_cstr.rs	/^    fn fabricate_nul_error(b: &str) -> NulError {$/;"	P	implementation:SmallCString
filename	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/csvtab.rs	/^    filename: String,$/;"	m	struct:CsvTab
filter	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    filter: Option<Box<dyn Fn(&str) -> bool>>,$/;"	m	struct:Session
filter	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/array.rs	/^    fn filter(&mut self, idx_num: c_int, _idx_str: Option<&str>, args: &Values<'_>) -> Result<()/;"	P	implementation:ArrayTabCursor
filter	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/csvtab.rs	/^    fn filter($/;"	P	implementation:CsvTabCursor
filter	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    fn filter(&mut self, idx_num: c_int, idx_str: Option<&str>, args: &Values<'_>) -> Result<()>/;"	P	interface:VTabCursor
filter	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/series.rs	/^    fn filter(&mut self, idx_num: c_int, _idx_str: Option<&str>, args: &Values<'_>) -> Result<()/;"	P	implementation:SeriesTabCursor
finalize	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^        fn finalize(&self, _: &mut Context<'_>, sum: Option<i64>) -> Result<Option<i64>> {$/;"	P	implementation:test::Sum
finalize	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^        fn finalize(&self, _: &mut Context<'_>, sum: Option<i64>) -> Result<i64> {$/;"	P	implementation:test::Count
finalize	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^    fn finalize(&self, _: &mut Context<'_>, _: Option<A>) -> Result<T>;$/;"	P	interface:Aggregate
finalize	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/raw_statement.rs	/^    pub fn finalize(mut self) -> c_int {$/;"	P	implementation:RawStatement
finalize	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    pub fn finalize(mut self) -> Result<()> {$/;"	P	implementation:Statement
finalize_	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/raw_statement.rs	/^    fn finalize_(&mut self) -> c_int {$/;"	P	implementation:RawStatement
finalize_	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    fn finalize_(&mut self) -> Result<()> {$/;"	P	implementation:Statement
finish	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    pub fn finish(mut self) -> Result<()> {$/;"	P	implementation:Savepoint
finish	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    pub fn finish(mut self) -> Result<()> {$/;"	P	implementation:Transaction
finish_	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    fn finish_(&mut self) -> Result<()> {$/;"	P	implementation:Savepoint
finish_	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    fn finish_(&mut self) -> Result<()> {$/;"	P	implementation:Transaction
fired	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/unlock_notify.rs	/^    fn fired(&self) {$/;"	P	implementation:UnlockNotification
fk_conflicts	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    pub fn fk_conflicts(&self) -> Result<i32> {$/;"	P	implementation:ChangesetItem
flush	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/blob/mod.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:Blob
flush	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/cache.rs	/^    fn flush(&self) {$/;"	P	implementation:StatementCache
flush_prepared_statement_cache	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/cache.rs	/^    pub fn flush_prepared_statement_cache(&self) {$/;"	P	implementation:Connection
fmt	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Error
fmt	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^            fn fmt(&self, f: &mut fmt::Formatter<'_>) -> Result<(), fmt::Error> {$/;"	P	implementation:test::query_and_then_tests::CustomError
fmt	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Connection
fmt	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Statement
fmt	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/from_sql.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:FromSqlError
fmt	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Type
fmt	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/small_cstr.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {$/;"	P	implementation:SmallCString
fmt	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/sqlite_string.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {$/;"	P	implementation:SqliteMallocString
free_array	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/array.rs	/^pub(crate) unsafe extern "C" fn free_array(p: *mut c_void) {$/;"	f
free_boxed_hook	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/hooks.rs	/^unsafe fn free_boxed_hook<F>(p: *mut c_void) {$/;"	f
free_boxed_value	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/collation.rs	/^unsafe extern "C" fn free_boxed_value<T>(p: *mut c_void) {$/;"	f
free_boxed_value	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^unsafe extern "C" fn free_boxed_value<T>(p: *mut c_void) {$/;"	f
free_boxed_value	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^unsafe extern "C" fn free_boxed_value<T>(p: *mut c_void) {$/;"	f
free_commit_hook	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/inner_connection.rs	/^    pub free_commit_hook: Option<unsafe fn(*mut ::std::os::raw::c_void)>,$/;"	m	struct:InnerConnection
free_rollback_hook	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/inner_connection.rs	/^    pub free_rollback_hook: Option<unsafe fn(*mut ::std::os::raw::c_void)>,$/;"	m	struct:InnerConnection
free_update_hook	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/inner_connection.rs	/^    pub free_update_hook: Option<unsafe fn(*mut ::std::os::raw::c_void)>,$/;"	m	struct:InnerConnection
from	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/error.rs	/^    fn from(err: ::std::ffi::NulError) -> Error {$/;"	P	implementation:Error
from	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/error.rs	/^    fn from(err: FromSqlError) -> Error {$/;"	P	implementation:Error
from	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/error.rs	/^    fn from(err: str::Utf8Error) -> Error {$/;"	P	implementation:Error
from	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/hooks.rs	/^    fn from(code: i32) -> Action {$/;"	P	implementation:Action
from	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^            fn from(se: Error) -> CustomError {$/;"	P	implementation:test::query_and_then_tests::CustomError
from	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    fn from(code: i32) -> ConflictType {$/;"	P	implementation:ConflictType
from	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/to_sql.rs	/^    fn from(t: &'a T) -> Self {$/;"	f
from	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value.rs	/^    fn from(_: Null) -> Value {$/;"	P	implementation:Value
from	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value.rs	/^    fn from(f: f32) -> Value {$/;"	P	implementation:Value
from	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value.rs	/^    fn from(f: f64) -> Value {$/;"	P	implementation:Value
from	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value.rs	/^    fn from(i: bool) -> Value {$/;"	P	implementation:Value
from	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value.rs	/^    fn from(i: i128) -> Value {$/;"	P	implementation:Value
from	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value.rs	/^    fn from(i: i64) -> Value {$/;"	P	implementation:Value
from	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value.rs	/^    fn from(i: isize) -> Value {$/;"	P	implementation:Value
from	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value.rs	/^    fn from(id: uuid::Uuid) -> Value {$/;"	P	implementation:Value
from	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value.rs	/^    fn from(s: String) -> Value {$/;"	P	implementation:Value
from	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value.rs	/^    fn from(v: Option<T>) -> Value {$/;"	f
from	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value.rs	/^    fn from(v: Vec<u8>) -> Value {$/;"	P	implementation:Value
from	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value_ref.rs	/^    fn from(borrowed: ValueRef<'_>) -> Value {$/;"	P	implementation:Value
from	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value_ref.rs	/^    fn from(s: &[u8]) -> ValueRef<'_> {$/;"	P	implementation:ValueRef
from	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value_ref.rs	/^    fn from(s: &str) -> ValueRef<'_> {$/;"	P	implementation:ValueRef
from	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value_ref.rs	/^    fn from(s: Option<T>) -> ValueRef<'a> {$/;"	f
from	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value_ref.rs	/^    fn from(value: &'a Value) -> ValueRef<'a> {$/;"	P	implementation:ValueRef
from	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/csvtab.rs	/^    fn from(err: csv::Error) -> Error {$/;"	P	implementation:Error
from	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    fn from(code: u8) -> IndexConstraintOp {$/;"	P	implementation:IndexConstraintOp
from_handle	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    pub unsafe fn from_handle(db: *mut ffi::sqlite3) -> Result<Connection> {$/;"	P	implementation:Connection
from_i64	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value.rs	/^macro_rules! from_i64($/;"	M
from_raw	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/sqlite_string.rs	/^    pub(crate) unsafe fn from_raw(ptr: *mut c_char) -> Option<Self> {$/;"	P	implementation:SqliteMallocString
from_raw_nonnull	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/sqlite_string.rs	/^    pub(crate) unsafe fn from_raw_nonnull(ptr: NonNull<c_char>) -> Self {$/;"	P	implementation:SqliteMallocString
from_sql	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/mod.rs	/^mod from_sql;$/;"	n
from_sql_integral	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/from_sql.rs	/^macro_rules! from_sql_integral($/;"	M
from_str	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/sqlite_string.rs	/^    pub(crate) fn from_str(s: &str) -> Self {$/;"	P	implementation:SqliteMallocString
from_value	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/to_sql.rs	/^macro_rules! from_value($/;"	M
from_value	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/value_ref.rs	/^    pub(crate) unsafe fn from_value(value: *mut crate::ffi::sqlite3_value) -> ValueRef<'a> {$/;"	P	implementation:ValueRef
functions	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^pub mod functions;$/;"	n
get	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/cache.rs	/^    fn get<'conn>($/;"	P	implementation:StatementCache
get	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^    pub fn get<T: FromSql>(&self, idx: usize) -> Result<T> {$/;"	P	implementation:Context
get	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^    fn get(&self) -> Option<&Row<'stmt>> {$/;"	P	implementation:Rows
get	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^    pub fn get<I: RowIndex, T: FromSql>(&self, idx: I) -> Result<T> {$/;"	P	implementation:Row
get	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    fn get(&self) -> Option<&ChangesetItem> {$/;"	P	implementation:ChangesetIter
get	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    pub fn get<T: FromSql>(&self, idx: usize) -> Result<T> {$/;"	P	implementation:Values
get_array	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    fn get_array(&self, idx: usize) -> Option<array::Array> {$/;"	P	implementation:Values
get_aux	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^    pub fn get_aux<T: Send + Sync + 'static>(&self, arg: c_int) -> Result<Option<Arc<T>>> {$/;"	P	implementation:Context
get_connection	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^    pub unsafe fn get_connection(&self) -> Result<ConnectionRef<'_>> {$/;"	P	implementation:Context
get_expected_row	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^    pub(crate) fn get_expected_row(&mut self) -> Result<&Row<'stmt>> {$/;"	P	implementation:Rows
get_interrupt_handle	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/inner_connection.rs	/^    pub fn get_interrupt_handle(&self) -> InterruptHandle {$/;"	P	implementation:InnerConnection
get_interrupt_handle	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    pub fn get_interrupt_handle(&self) -> InterruptHandle {$/;"	P	implementation:Connection
get_or_create_aux	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^    pub fn get_or_create_aux<T, E, F>(&self, arg: c_int, func: F) -> Result<Arc<T>>$/;"	P	implementation:Context
get_or_insert_with	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/param_cache.rs	/^    pub fn get_or_insert_with<F>(&self, s: &str, func: F) -> Option<usize>$/;"	P	implementation:ParamIndexCache
get_raw	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^    pub fn get_raw(&self, idx: usize) -> ValueRef<'_> {$/;"	P	implementation:Context
get_raw	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^    pub fn get_raw<I: RowIndex>(&self, idx: I) -> ValueRef<'_> {$/;"	P	implementation:Row
get_raw_checked	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^    pub fn get_raw_checked<I: RowIndex>(&self, idx: I) -> Result<ValueRef<'_>> {$/;"	P	implementation:Row
get_ref	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^    pub fn get_ref<I: RowIndex>(&self, idx: I) -> Result<ValueRef<'_>> {$/;"	P	implementation:Row
get_ref_unwrap	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^    pub fn get_ref_unwrap<I: RowIndex>(&self, idx: I) -> ValueRef<'_> {$/;"	P	implementation:Row
get_status	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/raw_statement.rs	/^    pub fn get_status(&self, status: StatementStatus, reset: bool) -> i32 {$/;"	P	implementation:RawStatement
get_status	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    pub fn get_status(&self, status: StatementStatus) -> i32 {$/;"	P	implementation:Statement
get_unwrap	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^    pub fn get_unwrap<I: RowIndex, T: FromSql>(&self, idx: I) -> T {$/;"	P	implementation:Row
get_url	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/url.rs	/^    fn get_url(db: &Connection, id: i64) -> Result<Url> {$/;"	f	module:test
half	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^    fn half(ctx: &Context<'_>) -> Result<c_double> {$/;"	f	module:test
handle	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    pub unsafe fn handle(&self) -> *mut ffi::sqlite3 {$/;"	P	implementation:Connection
handle	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    pub unsafe fn handle(&mut self) -> *mut ffi::sqlite3 {$/;"	P	implementation:VTabConnection
handler	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/hooks.rs	/^        fn handler() -> bool {$/;"	f	function:test::test_progress_handler_interrupt
has_headers	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/csvtab.rs	/^    has_headers: bool,$/;"	m	struct:CsvTab
has_tail	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/raw_statement.rs	/^    pub fn has_tail(&self) -> bool {$/;"	P	implementation:RawStatement
hook	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/hooks.rs	/^        fn hook() -> bool {$/;"	f	function:test::test_fn_commit_hook
hooks	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^mod hooks;$/;"	n
i128	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/from_sql.rs	/^impl FromSql for i128 {$/;"	c
i64	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/from_sql.rs	/^impl FromSql for i64 {$/;"	c
id	/home/cht/Rust/wssfinal/database/src/lib.rs	/^    id: i32,$/;"	m	struct:Person
idx	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^    fn idx(&self, stmt: &Statement<'_>) -> Result<usize> {$/;"	P	implementation:str
idx	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^    fn idx(&self, stmt: &Statement<'_>) -> Result<usize> {$/;"	P	implementation:usize
idx	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^    fn idx(&self, stmt: &Statement<'_>) -> Result<usize>;$/;"	P	interface:RowIndex
impl_for_array_ref	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/params.rs	/^macro_rules! impl_for_array_ref {$/;"	M
indirect	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    indirect: bool,$/;"	m	struct:Operation
indirect	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    pub fn indirect(&self) -> bool {$/;"	P	implementation:Operation
init	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^        fn init(&self, _: &mut Context<'_>) -> Result<i64> {$/;"	P	implementation:test::Count
init	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^        fn init(&self, _: &mut Context<'_>) -> Result<i64> {$/;"	P	implementation:test::Sum
init	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^    fn init(&self, _: &mut Context<'_>) -> Result<A>;$/;"	P	interface:Aggregate
inner_connection	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^mod inner_connection;$/;"	n
insert	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    pub fn insert<P: Params>(&mut self, params: P) -> Result<i64> {$/;"	P	implementation:Statement
insert	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    fn insert(x: i32, conn: &Connection) -> Result<usize> {$/;"	f	module:test
insert_statement	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/mod.rs	/^            insert_statement: Statement<'conn>,$/;"	m	struct:test::test_numeric_conversions::DbEtc
interrupt	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    pub fn interrupt(&self) {$/;"	P	implementation:InterruptHandle
interrupt_lock	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/inner_connection.rs	/^    interrupt_lock: Arc<Mutex<*mut ffi::sqlite3>>,$/;"	m	struct:InnerConnection
into_inner	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/sqlite_string.rs	/^    pub(crate) fn into_inner(self) -> NonNull<c_char> {$/;"	P	implementation:SqliteMallocString
into_iter	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    fn into_iter(self) -> ValueIter<'a> {$/;"	P	implementation:Values
into_raw	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    pub(crate) unsafe fn into_raw(mut self) -> RawStatement {$/;"	P	implementation:Statement
into_raw	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/sqlite_string.rs	/^    pub(crate) fn into_raw(self) -> *mut c_char {$/;"	P	implementation:SqliteMallocString
inverse	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^        fn inverse(&self, ctx: &mut Context<'_>, sum: &mut i64) -> Result<()> {$/;"	P	implementation:test::Sum
inverse	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^    fn inverse(&self, _: &mut Context<'_>, _: &mut A) -> Result<()>;$/;"	P	interface:WindowAggregate
invert	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    pub fn invert(&self) -> Result<Changeset> {$/;"	P	implementation:Changeset
invert_strm	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^pub fn invert_strm(input: &mut dyn Read, output: &mut dyn Write) -> Result<()> {$/;"	f
is_autocommit	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/inner_connection.rs	/^    pub fn is_autocommit(&self) -> bool {$/;"	P	implementation:InnerConnection
is_autocommit	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    pub fn is_autocommit(&self) -> bool {$/;"	P	implementation:Connection
is_busy	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/inner_connection.rs	/^    pub fn is_busy(&self) -> bool {$/;"	P	implementation:InnerConnection
is_busy	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    pub fn is_busy(&self) -> bool {$/;"	P	implementation:Connection
is_desc	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/series.rs	/^    is_desc: bool,$/;"	m	struct:SeriesTabCursor
is_empty	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/blob/mod.rs	/^    pub fn is_empty(&self) -> bool {$/;"	P	implementation:Blob
is_empty	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^    pub fn is_empty(&self) -> bool {$/;"	P	implementation:Context
is_empty	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    pub fn is_empty(&self) -> bool {$/;"	P	implementation:Session
is_empty	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/small_cstr.rs	/^    pub fn is_empty(&self) -> bool {$/;"	P	implementation:SmallCString
is_empty	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    pub fn is_empty(&self) -> bool {$/;"	P	implementation:Values
is_enabled	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    pub fn is_enabled(&self) -> bool {$/;"	P	implementation:Session
is_identifier	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/pragma.rs	/^    fn is_identifier() {$/;"	f	module:test
is_identifier	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/pragma.rs	/^fn is_identifier(s: &str) -> bool {$/;"	f
is_identifier_continue	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/pragma.rs	/^fn is_identifier_continue(c: char) -> bool {$/;"	f
is_identifier_start	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/pragma.rs	/^fn is_identifier_start(c: char) -> bool {$/;"	f
is_indirect	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    pub fn is_indirect(&self) -> bool {$/;"	P	implementation:Session
is_invalid_column_type	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/mod.rs	/^        fn is_invalid_column_type(err: Error) -> bool {$/;"	f	function:test::test_mismatched_types
is_locked	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/unlock_notify.rs	/^pub unsafe fn is_locked(_db: *mut ffi::sqlite3, _rc: c_int) -> bool {$/;"	f
is_locked	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/unlock_notify.rs	/^pub unsafe fn is_locked(db: *mut ffi::sqlite3, rc: c_int) -> bool {$/;"	f
is_null	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/raw_statement.rs	/^    pub fn is_null(&self) -> bool {$/;"	P	implementation:RawStatement
is_order_by_desc	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    pub fn is_order_by_desc(&self) -> bool {$/;"	P	implementation:OrderBy
is_to_sql	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/to_sql.rs	/^    fn is_to_sql<T: ToSql>() {}$/;"	f	module:test
is_usable	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    pub fn is_usable(&self) -> bool {$/;"	P	implementation:IndexConstraint
it	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    it: *mut ffi::sqlite3_changeset_iter,$/;"	m	struct:ChangesetItem
it	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    it: *mut ffi::sqlite3_changeset_iter,$/;"	m	struct:ChangesetIter
item	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    item: Option<ChangesetItem>,$/;"	m	struct:ChangesetIter
iter	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    pub fn iter(&self) -> Result<ChangesetIter<'_>> {$/;"	P	implementation:Changeset
iter	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    iter: slice::Iter<'a, *mut ffi::sqlite3_value>,$/;"	m	struct:ValueIter
iter	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    iter: slice::Iter<'a, ffi::sqlite3_index_constraint>,$/;"	m	struct:IndexConstraintIter
iter	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    iter: slice::Iter<'a, ffi::sqlite3_index_info_sqlite3_index_orderby>,$/;"	m	struct:OrderByIter
iter	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    pub fn iter(&self) -> ValueIter<'_> {$/;"	P	implementation:Values
last_insert_rowid	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/inner_connection.rs	/^    pub fn last_insert_rowid(&self) -> i64 {$/;"	P	implementation:InnerConnection
last_insert_rowid	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    pub fn last_insert_rowid(&self) -> i64 {$/;"	P	implementation:Connection
len	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/blob/mod.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:Blob
len	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/cache.rs	/^        fn len(&self) -> usize {$/;"	P	implementation:test::StatementCache
len	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:Context
len	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/small_cstr.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:SmallCString
len	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/array.rs	/^    fn len(&self) -> i64 {$/;"	P	implementation:ArrayTabCursor
len	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:Values
len_as_c_int	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^fn len_as_c_int(len: usize) -> Result<c_int> {$/;"	f
limit	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/limits.rs	/^    pub fn limit(&self, limit: Limit) -> i32 {$/;"	P	implementation:Connection
limits	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^pub mod limits;$/;"	n
load_extension	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/inner_connection.rs	/^    pub fn load_extension(&self, dylib_path: &Path, entry_point: Option<&str>) -> Result<()> {$/;"	P	implementation:InnerConnection
load_extension	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    pub fn load_extension<P: AsRef<Path>>($/;"	P	implementation:Connection
load_extension_disable	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    pub fn load_extension_disable(&self) -> Result<()> {$/;"	P	implementation:Connection
load_extension_enable	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    pub fn load_extension_enable(&self) -> Result<()> {$/;"	P	implementation:Connection
load_extension_guard	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^mod load_extension_guard;$/;"	n
load_module	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/array.rs	/^pub fn load_module(conn: &Connection) -> Result<()> {$/;"	f
load_module	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/csvtab.rs	/^pub fn load_module(conn: &Connection) -> Result<()> {$/;"	f
load_module	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/series.rs	/^pub fn load_module(conn: &Connection) -> Result<()> {$/;"	f
locking_mode	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/pragma.rs	/^    fn locking_mode() -> Result<()> {$/;"	f	module:test
log	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/trace.rs	/^pub fn log(err_code: c_int, msg: &str) {$/;"	f
log_callback	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/trace.rs	/^    extern "C" fn log_callback(p_arg: *mut c_void, err: c_int, msg: *const c_char) {$/;"	f	function:config_log
make_nonnull	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/sqlite_string.rs	/^fn make_nonnull(v: &str) -> String {$/;"	f
map	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^    map: F,$/;"	m	struct:AndThenRows
map	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^    map: F,$/;"	m	struct:MappedRows
map	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^    pub fn map<F, B>(self, f: F) -> Map<'stmt, F>$/;"	P	implementation:Rows
mapped	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^    pub fn mapped<F, B>(self, f: F) -> MappedRows<'stmt, F>$/;"	P	implementation:Rows
max_value	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/series.rs	/^    max_value: i64,$/;"	m	struct:SeriesTabCursor
min_value	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/series.rs	/^    min_value: i64,$/;"	m	struct:SeriesTabCursor
mutex	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/unlock_notify.rs	/^    mutex: Mutex<bool>, \/\/ Mutex to protect structure$/;"	m	struct:UnlockNotification
n	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    n: c_int,$/;"	m	struct:Changeset
name	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/column.rs	/^    name: &'stmt str,$/;"	m	struct:Column
name	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/column.rs	/^    pub fn name(&self) -> &str {$/;"	P	implementation:Column
name	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    name: String,$/;"	m	struct:Savepoint
name	/home/cht/Rust/wssfinal/database/src/lib.rs	/^    name: String,$/;"	m	struct:Person
named_params	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^macro_rules! named_params {$/;"	M
new	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/backup.rs	/^    pub fn new<'a, 'b>(from: &'a Connection, to: &'b mut Connection) -> Result<Backup<'a, 'b>> {$/;"	P	implementation:Backup
new	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/cache.rs	/^    fn new<'conn>(stmt: Statement<'conn>, cache: &'conn StatementCache) -> CachedStatement<'conn/;"	P	implementation:CachedStatement
new	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/inner_connection.rs	/^    pub unsafe fn new(db: *mut ffi::sqlite3, owned: bool) -> InnerConnection {$/;"	P	implementation:InnerConnection
new	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    pub fn new(conn: &'conn Connection, sql: &'sql str) -> Batch<'conn, 'sql> {$/;"	P	implementation:Batch
new	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/load_extension_guard.rs	/^    pub fn new(conn: &Connection) -> Result<LoadExtensionGuard<'_>> {$/;"	P	implementation:LoadExtensionGuard
new	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/pragma.rs	/^    pub fn new() -> Sql {$/;"	P	implementation:Sql
new	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/raw_statement.rs	/^    pub unsafe fn new(stmt: *mut ffi::sqlite3_stmt, tail: usize) -> RawStatement {$/;"	P	implementation:RawStatement
new	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^    pub(crate) fn new(stmt: &'stmt Statement<'stmt>) -> Rows<'stmt> {$/;"	P	implementation:Rows
new	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    pub fn new() -> Result<Self> {$/;"	P	implementation:Changegroup
new	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    pub fn new(db: &Connection) -> Result<Session<'_>> {$/;"	P	implementation:Session
new	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    pub(super) fn new(conn: &Connection, stmt: RawStatement) -> Statement<'_> {$/;"	P	implementation:Statement
new	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    pub fn new(conn: &mut Connection) -> Result<Savepoint<'_>> {$/;"	P	implementation:Savepoint
new	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    pub fn new(conn: &mut Connection, behavior: TransactionBehavior) -> Result<Transaction<'_>> /;"	P	implementation:Transaction
new	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/unlock_notify.rs	/^    fn new() -> UnlockNotification {$/;"	P	implementation:UnlockNotification
new	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/small_cstr.rs	/^    pub fn new(s: &str) -> Result<Self, NulError> {$/;"	P	implementation:SmallCString
new	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/array.rs	/^    fn new<'vtab>() -> ArrayTabCursor<'vtab> {$/;"	P	implementation:ArrayTabCursor
new	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/csvtab.rs	/^    fn new<'vtab>(reader: csv::Reader<File>) -> CsvTabCursor<'vtab> {$/;"	P	implementation:CsvTabCursor
new	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/series.rs	/^    fn new<'vtab>() -> SeriesTabCursor<'vtab> {$/;"	P	implementation:SeriesTabCursor
new_unchecked	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    pub fn new_unchecked($/;"	P	implementation:Transaction
new_value	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    pub fn new_value(&self, col: usize) -> Result<ValueRef<'_>> {$/;"	P	implementation:ChangesetItem
new_with_name	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    pub fn new_with_name<'conn>($/;"	P	implementation:Session
new_with_names	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/backup.rs	/^    pub fn new_with_names<'a, 'b>($/;"	P	implementation:Backup
next	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    fn next(&mut self) -> Option<Result<Statement<'conn>>> {$/;"	P	implementation:Batch
next	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    pub fn next(&mut self) -> Result<Option<Statement<'conn>>> {$/;"	P	implementation:Batch
next	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^    fn next(&mut self) -> Option<Result<T>> {$/;"	f
next	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^    fn next(&mut self) -> Result<Option<B>> {$/;"	f
next	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^    pub fn next(&mut self) -> Result<Option<&Row<'stmt>>> {$/;"	P	implementation:Rows
next	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/array.rs	/^    fn next(&mut self) -> Result<()> {$/;"	P	implementation:ArrayTabCursor
next	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/csvtab.rs	/^    fn next(&mut self) -> Result<()> {$/;"	P	implementation:CsvTabCursor
next	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    fn next(&mut self) -> Option<IndexConstraint<'a>> {$/;"	P	implementation:IndexConstraintIter
next	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    fn next(&mut self) -> Option<OrderBy<'a>> {$/;"	P	implementation:OrderByIter
next	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    fn next(&mut self) -> Option<ValueRef<'a>> {$/;"	P	implementation:ValueIter
next	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    fn next(&mut self) -> Result<()>;$/;"	P	interface:VTabCursor
next	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/series.rs	/^    fn next(&mut self) -> Result<()> {$/;"	P	implementation:SeriesTabCursor
num_of_order_by	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    pub fn num_of_order_by(&self) -> usize {$/;"	P	implementation:IndexInfo
number_of_columns	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    number_of_columns: i32,$/;"	m	struct:Operation
number_of_columns	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    pub fn number_of_columns(&self) -> i32 {$/;"	P	implementation:Operation
offset_first_row	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/csvtab.rs	/^    offset_first_row: csv::Position,$/;"	m	struct:CsvTab
old_value	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    pub fn old_value(&self, col: usize) -> Result<ValueRef<'_>> {$/;"	P	implementation:ChangesetItem
one_changeset	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    fn one_changeset() -> Result<Changeset> {$/;"	f	module:test
one_changeset_strm	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    fn one_changeset_strm() -> Result<Vec<u8>> {$/;"	f	module:test
op	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    pub fn op(&self) -> Result<Operation<'_>> {$/;"	P	implementation:ChangesetItem
open	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    pub fn open<P: AsRef<Path>>(path: P) -> Result<Connection> {$/;"	P	implementation:Connection
open	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/array.rs	/^    fn open(&self) -> Result<ArrayTabCursor<'_>> {$/;"	P	implementation:ArrayTab
open	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/csvtab.rs	/^    fn open(&self) -> Result<CsvTabCursor<'_>> {$/;"	P	implementation:CsvTab
open	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    fn open(&'vtab self) -> Result<Self::Cursor>;$/;"	P	interface:VTab
open	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/series.rs	/^    fn open(&self) -> Result<SeriesTabCursor<'_>> {$/;"	P	implementation:SeriesTab
open_brace	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/pragma.rs	/^    pub fn open_brace(&mut self) {$/;"	P	implementation:Sql
open_in_memory	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    pub fn open_in_memory() -> Result<Connection> {$/;"	P	implementation:Connection
open_in_memory_with_flags	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    pub fn open_in_memory_with_flags(flags: OpenFlags) -> Result<Connection> {$/;"	P	implementation:Connection
open_in_memory_with_flags_and_vfs	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    pub fn open_in_memory_with_flags_and_vfs(flags: OpenFlags, vfs: &str) -> Result<Connection> /;"	P	implementation:Connection
open_with_flags	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/inner_connection.rs	/^    pub fn open_with_flags($/;"	P	implementation:InnerConnection
open_with_flags	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    pub fn open_with_flags<P: AsRef<Path>>(path: P, flags: OpenFlags) -> Result<Connection> {$/;"	P	implementation:Connection
open_with_flags_and_vfs	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    pub fn open_with_flags_and_vfs<P: AsRef<Path>>($/;"	P	implementation:Connection
operator	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    pub fn operator(&self) -> IndexConstraintOp {$/;"	P	implementation:IndexConstraint
optional	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    fn optional(self) -> Result<Option<T>> {$/;"	P	implementation:Result
optional	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    fn optional(self) -> Result<Option<T>>;$/;"	P	interface:OptionalExtension
order_bys	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    pub fn order_bys(&self) -> OrderByIter<'_> {$/;"	P	implementation:IndexInfo
output	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    pub fn output(&mut self) -> Result<Changeset> {$/;"	P	implementation:Changegroup
output_strm	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    pub fn output_strm(&mut self, output: &mut dyn Write) -> Result<()> {$/;"	P	implementation:Changegroup
owned	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/inner_connection.rs	/^    owned: bool,$/;"	m	struct:InnerConnection
pagecount	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/backup.rs	/^    pub pagecount: c_int,$/;"	m	struct:Progress
param_cache	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/mod.rs	/^pub(crate) mod param_cache;$/;"	n
parameter	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/csvtab.rs	/^    fn parameter(c_slice: &[u8]) -> Result<(&str, &str)> {$/;"	P	implementation:CsvTab
parameter_count	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    pub fn parameter_count(&self) -> usize {$/;"	P	implementation:Statement
parameter_index	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    pub fn parameter_index(&self, name: &str) -> Result<Option<usize>> {$/;"	P	implementation:Statement
parameter_name	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    pub fn parameter_name(&self, index: usize) -> Option<&'_ str> {$/;"	P	implementation:Statement
params	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^macro_rules! params {$/;"	M
params	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^mod params;$/;"	n
params_from_iter	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/params.rs	/^pub fn params_from_iter<I>(iter: I) -> ParamsFromIter<I>$/;"	f
parse_boolean	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^pub fn parse_boolean(s: &str) -> Option<bool> {$/;"	f
parse_byte	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/csvtab.rs	/^    fn parse_byte(arg: &str) -> Option<u8> {$/;"	P	implementation:CsvTab
patchset	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    pub fn patchset(&mut self) -> Result<Changeset> {$/;"	P	implementation:Session
patchset_strm	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    pub fn patchset_strm(&mut self, output: &mut dyn Write) -> Result<()> {$/;"	P	implementation:Session
path	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    path: Option<PathBuf>,$/;"	m	struct:Connection
path_to_cstring	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^fn path_to_cstring(p: &Path) -> Result<CString> {$/;"	f
phantom	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^    phantom: PhantomData<&'ctx Context<'ctx>>,$/;"	m	struct:ConnectionRef
phantom	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    phantom: PhantomData<&'changeset Changeset>,$/;"	m	struct:ChangesetIter
phantom	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    phantom: PhantomData<&'conn Connection>,$/;"	m	struct:Session
phantom	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/array.rs	/^    phantom: PhantomData<&'vtab ArrayTab>,$/;"	m	struct:ArrayTabCursor
phantom	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/csvtab.rs	/^    phantom: PhantomData<&'vtab CsvTab>,$/;"	m	struct:CsvTabCursor
phantom	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    phantom: PhantomData<&'vtab T>,$/;"	m	struct:Module
phantom	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/series.rs	/^    phantom: PhantomData<&'vtab SeriesTab>,$/;"	m	struct:SeriesTabCursor
phantom_from	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/backup.rs	/^    phantom_from: PhantomData<&'a Connection>,$/;"	m	struct:Backup
phantom_to	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/backup.rs	/^    phantom_to: PhantomData<&'b Connection>,$/;"	m	struct:Backup
pk	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    pub fn pk(&self) -> Result<&[u8]> {$/;"	P	implementation:ChangesetItem
pos	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/blob/mod.rs	/^    pos: i32,$/;"	m	struct:Blob
pos_io	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/blob/mod.rs	/^mod pos_io;$/;"	n
pragma	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^mod pragma;$/;"	n
pragma	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/pragma.rs	/^    fn pragma() -> Result<()> {$/;"	f	module:test
pragma	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/pragma.rs	/^    pub fn pragma<F>($/;"	P	implementation:Connection
pragma_func	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/pragma.rs	/^    fn pragma_func() -> Result<()> {$/;"	f	module:test
pragma_func_query_value	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/pragma.rs	/^    fn pragma_func_query_value() -> Result<()> {$/;"	f	module:test
pragma_query	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/pragma.rs	/^    pub fn pragma_query<F>($/;"	P	implementation:Connection
pragma_query_no_schema	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/pragma.rs	/^    fn pragma_query_no_schema() -> Result<()> {$/;"	f	module:test
pragma_query_value	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/pragma.rs	/^    fn pragma_query_value() -> Result<()> {$/;"	f	module:test
pragma_query_value	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/pragma.rs	/^    pub fn pragma_query_value<T, F>($/;"	P	implementation:Connection
pragma_query_with_schema	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/pragma.rs	/^    fn pragma_query_with_schema() -> Result<()> {$/;"	f	module:test
pragma_update	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/pragma.rs	/^    fn pragma_update() -> Result<()> {$/;"	f	module:test
pragma_update	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/pragma.rs	/^    pub fn pragma_update($/;"	P	implementation:Connection
pragma_update_and_check	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/pragma.rs	/^    fn pragma_update_and_check() -> Result<()> {$/;"	f	module:test
pragma_update_and_check	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/pragma.rs	/^    pub fn pragma_update_and_check<F, T>($/;"	P	implementation:Connection
prepare	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/inner_connection.rs	/^    pub fn prepare<'a>(&mut self, conn: &'a Connection, sql: &str) -> Result<Statement<'a>> {$/;"	P	implementation:InnerConnection
prepare	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    pub fn prepare(&self, sql: &str) -> Result<Statement<'_>> {$/;"	P	implementation:Connection
prepare_cached	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/cache.rs	/^    pub fn prepare_cached(&self, sql: &str) -> Result<CachedStatement<'_>> {$/;"	P	implementation:Connection
profile	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/trace.rs	/^    pub fn profile(&mut self, profile_fn: Option<fn(&str, Duration)>) {$/;"	P	implementation:Connection
profile_callback	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/trace.rs	/^        unsafe extern "C" fn profile_callback($/;"	f	method:Connection::profile
profiler	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/trace.rs	/^        fn profiler(s: &str, d: Duration) {$/;"	f	function:test::test_profile
progress	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/backup.rs	/^    pub fn progress(&self) -> Progress {$/;"	P	implementation:Backup
progress_handler	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/hooks.rs	/^    fn progress_handler<F>(&mut self, num_ops: c_int, handler: Option<F>)$/;"	P	implementation:InnerConnection
progress_handler	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/hooks.rs	/^    pub fn progress_handler<F>(&self, num_ops: c_int, handler: Option<F>)$/;"	P	implementation:Connection
progress_handler	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/inner_connection.rs	/^    pub progress_handler: Option<Box<dyn FnMut() -> bool + Send>>,$/;"	m	struct:InnerConnection
ptr	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/raw_statement.rs	/^    ptr: *mut ffi::sqlite3_stmt,$/;"	m	struct:RawStatement
ptr	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/raw_statement.rs	/^    pub unsafe fn ptr(&self) -> *mut ffi::sqlite3_stmt {$/;"	P	implementation:RawStatement
ptr	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/sqlite_string.rs	/^    ptr: NonNull<c_char>,$/;"	m	struct:SqliteMallocString
ptr	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/array.rs	/^    ptr: Option<Array>,$/;"	m	struct:ArrayTabCursor
push_dot	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/pragma.rs	/^    pub fn push_dot(&mut self) {$/;"	P	implementation:Sql
push_equal_sign	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/pragma.rs	/^    pub fn push_equal_sign(&mut self) {$/;"	P	implementation:Sql
push_identifier	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/pragma.rs	/^    pub fn push_identifier(&mut self, s: &str) {$/;"	P	implementation:Sql
push_int	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/pragma.rs	/^    pub fn push_int(&mut self, i: i64) {$/;"	P	implementation:Sql
push_keyword	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/pragma.rs	/^    pub fn push_keyword(&mut self, keyword: &str) -> Result<()> {$/;"	P	implementation:Sql
push_pragma	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/pragma.rs	/^    pub fn push_pragma($/;"	P	implementation:Sql
push_real	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/pragma.rs	/^    pub fn push_real(&mut self, f: f64) {$/;"	P	implementation:Sql
push_schema_name	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/pragma.rs	/^    pub fn push_schema_name(&mut self, schema_name: DatabaseName<'_>) {$/;"	P	implementation:Sql
push_space	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/pragma.rs	/^    pub fn push_space(&mut self) {$/;"	P	implementation:Sql
push_string_literal	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/pragma.rs	/^    pub fn push_string_literal(&mut self, s: &str) {$/;"	P	implementation:Sql
push_value	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/pragma.rs	/^    pub fn push_value(&mut self, value: &dyn ToSql) -> Result<()> {$/;"	P	implementation:Sql
query	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    pub fn query<P: Params>(&mut self, params: P) -> Result<Rows<'_>> {$/;"	P	implementation:Statement
query_and_then	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    pub fn query_and_then<T, E, P, F>(&mut self, params: P, f: F) -> Result<AndThenRows<'_, F>>$/;"	P	implementation:Statement
query_and_then_named	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    pub fn query_and_then_named<T, E, F>($/;"	P	implementation:Statement
query_and_then_tests	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    mod query_and_then_tests {$/;"	n	module:test
query_map	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    pub fn query_map<T, P, F>(&mut self, params: P, f: F) -> Result<MappedRows<'_, F>>$/;"	P	implementation:Statement
query_map_named	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    pub fn query_map_named<T, F>($/;"	P	implementation:Statement
query_named	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    pub fn query_named(&mut self, params: &[(&str, &dyn ToSql)]) -> Result<Rows<'_>> {$/;"	P	implementation:Statement
query_row	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    pub fn query_row<T, P, F>(&self, sql: &str, params: P, f: F) -> Result<T>$/;"	P	implementation:Connection
query_row	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    pub fn query_row<T, P, F>(&mut self, params: P, f: F) -> Result<T>$/;"	P	implementation:Statement
query_row_and_then	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    pub fn query_row_and_then<T, E, P, F>(&self, sql: &str, params: P, f: F) -> Result<T, E>$/;"	P	implementation:Connection
query_row_named	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    pub fn query_row_named<T, F>(&self, sql: &str, params: &[(&str, &dyn ToSql)], f: F) -> Resul/;"	P	implementation:Connection
query_row_named	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    pub fn query_row_named<T, F>(&mut self, params: &[(&str, &dyn ToSql)], f: F) -> Result<T>$/;"	P	implementation:Statement
query_statement	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/mod.rs	/^            query_statement: Statement<'conn>,$/;"	m	struct:test::test_numeric_conversions::DbEtc
quote	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/csvtab.rs	/^    quote: u8,$/;"	m	struct:CsvTab
raw_bind_parameter	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    pub fn raw_bind_parameter<T: ToSql>($/;"	P	implementation:Statement
raw_execute	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    pub fn raw_execute(&mut self) -> Result<usize> {$/;"	P	implementation:Statement
raw_query	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    pub fn raw_query(&mut self) -> Rows<'_> {$/;"	P	implementation:Statement
raw_read_at	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/blob/pos_io.rs	/^    pub fn raw_read_at<'a>($/;"	P	implementation:Blob
raw_read_at_exact	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/blob/pos_io.rs	/^    pub fn raw_read_at_exact<'a>($/;"	P	implementation:Blob
raw_statement	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^mod raw_statement;$/;"	n
read	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/blob/mod.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:Blob
read_at	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/blob/pos_io.rs	/^    pub fn read_at(&self, buf: &mut [u8], read_start: usize) -> Result<usize> {$/;"	P	implementation:Blob
read_at_exact	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/blob/pos_io.rs	/^    pub fn read_at_exact(&self, buf: &mut [u8], read_start: usize) -> Result<()> {$/;"	P	implementation:Blob
read_only_module	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^pub fn read_only_module<'vtab, T: CreateVTab<'vtab>>() -> &'static Module<'vtab, T> {$/;"	f
reader	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/csvtab.rs	/^    fn reader(&self) -> Result<csv::Reader<File>, csv::Error> {$/;"	P	implementation:CsvTab
reader	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/csvtab.rs	/^    reader: csv::Reader<File>,$/;"	m	struct:CsvTabCursor
readonly	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/raw_statement.rs	/^    pub fn readonly(&self) -> bool {$/;"	P	implementation:RawStatement
regexp_with_auxilliary	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^    fn regexp_with_auxilliary(ctx: &Context<'_>) -> Result<bool> {$/;"	f	module:test
remaining	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/backup.rs	/^    pub remaining: c_int,$/;"	m	struct:Progress
remove_collation	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/collation.rs	/^    fn remove_collation(&mut self, collation_name: &str) -> Result<()> {$/;"	P	implementation:InnerConnection
remove_collation	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/collation.rs	/^    pub fn remove_collation(&self, collation_name: &str) -> Result<()> {$/;"	P	implementation:Connection
remove_function	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^    fn remove_function(&mut self, fn_name: &str, n_arg: c_int) -> Result<()> {$/;"	P	implementation:InnerConnection
remove_function	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^    pub fn remove_function(&self, fn_name: &str, n_arg: c_int) -> Result<()> {$/;"	P	implementation:Connection
remove_hooks	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/hooks.rs	/^    pub fn remove_hooks(&mut self) {$/;"	P	implementation:InnerConnection
remove_hooks	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/inner_connection.rs	/^    fn remove_hooks(&mut self) {}$/;"	P	implementation:InnerConnection
reopen	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/blob/mod.rs	/^    pub fn reopen(&mut self, row: i64) -> Result<()> {$/;"	P	implementation:Blob
report_error	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^unsafe fn report_error(ctx: *mut sqlite3_context, err: &Error) {$/;"	f
reset	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/raw_statement.rs	/^    pub fn reset(&self) -> c_int {$/;"	P	implementation:RawStatement
reset	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^    fn reset(&mut self) {$/;"	P	implementation:Rows
reset	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    pub(super) fn reset(&self) -> c_int {$/;"	P	implementation:Statement
reset_status	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    pub fn reset_status(&self, status: StatementStatus) -> i32 {$/;"	P	implementation:Statement
restore	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/backup.rs	/^    pub fn restore<P: AsRef<Path>, F: Fn(Progress)>($/;"	P	implementation:Connection
result_error	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^unsafe fn result_error<T>(ctx: *mut ffi::sqlite3_context, result: Result<T>) -> c_int {$/;"	f
rollback	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    pub fn rollback(&mut self) -> Result<()> {$/;"	P	implementation:Savepoint
rollback	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    pub fn rollback(mut self) -> Result<()> {$/;"	P	implementation:Transaction
rollback_	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    fn rollback_(&mut self) -> Result<()> {$/;"	P	implementation:Transaction
rollback_hook	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/hooks.rs	/^    fn rollback_hook<'c, F>(&'c mut self, hook: Option<F>)$/;"	P	implementation:InnerConnection
rollback_hook	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/hooks.rs	/^    pub fn rollback_hook<'c, F>(&'c self, hook: Option<F>)$/;"	P	implementation:Connection
row	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^mod row;$/;"	n
row	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^    row: Option<Row<'stmt>>,$/;"	m	struct:Rows
row_id	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/array.rs	/^    row_id: i64,$/;"	m	struct:ArrayTabCursor
row_id	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/series.rs	/^    row_id: i64,$/;"	m	struct:SeriesTabCursor
row_number	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/csvtab.rs	/^    row_number: usize,$/;"	m	struct:CsvTabCursor
rowid	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/array.rs	/^    fn rowid(&self) -> Result<i64> {$/;"	P	implementation:ArrayTabCursor
rowid	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/csvtab.rs	/^    fn rowid(&self) -> Result<i64> {$/;"	P	implementation:CsvTabCursor
rowid	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    fn rowid(&self) -> Result<i64>;$/;"	P	interface:VTabCursor
rowid	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/series.rs	/^    fn rowid(&self) -> Result<i64> {$/;"	P	implementation:SeriesTabCursor
rows	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^    rows: Rows<'stmt>,$/;"	m	struct:AndThenRows
rows	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^    rows: Rows<'stmt>,$/;"	m	struct:Map
rows	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^    rows: Rows<'stmt>,$/;"	m	struct:MappedRows
run_to_completion	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/backup.rs	/^    pub fn run_to_completion($/;"	P	implementation:Backup
rust_best_index	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^unsafe extern "C" fn rust_best_index<'vtab, T>($/;"	f
rust_close	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^unsafe extern "C" fn rust_close<C>(cursor: *mut ffi::sqlite3_vtab_cursor) -> c_int$/;"	f
rust_column	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^unsafe extern "C" fn rust_column<C>($/;"	f
rust_connect	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^unsafe extern "C" fn rust_connect<'vtab, T>($/;"	f
rust_create	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^unsafe extern "C" fn rust_create<'vtab, T>($/;"	f
rust_destroy	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^unsafe extern "C" fn rust_destroy<'vtab, T>(vtab: *mut ffi::sqlite3_vtab) -> c_int$/;"	f
rust_disconnect	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^unsafe extern "C" fn rust_disconnect<'vtab, T>(vtab: *mut ffi::sqlite3_vtab) -> c_int$/;"	f
rust_eof	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^unsafe extern "C" fn rust_eof<C>(cursor: *mut ffi::sqlite3_vtab_cursor) -> c_int$/;"	f
rust_filter	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^unsafe extern "C" fn rust_filter<C>($/;"	f
rust_next	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^unsafe extern "C" fn rust_next<C>(cursor: *mut ffi::sqlite3_vtab_cursor) -> c_int$/;"	f
rust_open	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^unsafe extern "C" fn rust_open<'vtab, T: 'vtab>($/;"	f
rust_rowid	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^unsafe extern "C" fn rust_rowid<C>($/;"	f
s	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    s: *mut ffi::sqlite3_session,$/;"	m	struct:Session
savepoint	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    pub fn savepoint(&mut self) -> Result<Savepoint<'_>> {$/;"	P	implementation:Connection
savepoint	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    pub fn savepoint(&mut self) -> Result<Savepoint<'_>> {$/;"	P	implementation:Savepoint
savepoint	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    pub fn savepoint(&mut self) -> Result<Savepoint<'_>> {$/;"	P	implementation:Transaction
savepoint_with_name	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    pub fn savepoint_with_name<T: Into<String>>(&mut self, name: T) -> Result<Savepoint<'_>> {$/;"	P	implementation:Connection
savepoint_with_name	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    pub fn savepoint_with_name<T: Into<String>>(&mut self, name: T) -> Result<Savepoint<'_>> {$/;"	P	implementation:Savepoint
savepoint_with_name	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    pub fn savepoint_with_name<T: Into<String>>(&mut self, name: T) -> Result<Savepoint<'_>> {$/;"	P	implementation:Transaction
sealed	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/params.rs	/^mod sealed {$/;"	n
sealed	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^mod sealed {$/;"	n
seek	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/blob/mod.rs	/^    fn seek(&mut self, pos: io::SeekFrom) -> io::Result<u64> {$/;"	P	implementation:Blob
serde_json	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/mod.rs	/^mod serde_json;$/;"	n
series	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^pub mod series; \/\/ SQLite >= 3.9.0$/;"	n
session	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^pub mod session;$/;"	n
set_argv_index	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    pub fn set_argv_index(&mut self, argv_index: c_int) {$/;"	P	implementation:IndexConstraintUsage
set_aux	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^    pub fn set_aux<T: Send + Sync + 'static>(&self, arg: c_int, value: T) -> Result<Arc<T>> {$/;"	P	implementation:Context
set_capacity	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/cache.rs	/^    fn set_capacity(&self, capacity: usize) {$/;"	P	implementation:StatementCache
set_db_config	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/config.rs	/^    pub fn set_db_config(&self, config: DbConfig, new_val: bool) -> Result<bool> {$/;"	P	implementation:Connection
set_drop_behavior	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    pub fn set_drop_behavior(&mut self, drop_behavior: DropBehavior) {$/;"	P	implementation:Savepoint
set_drop_behavior	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    pub fn set_drop_behavior(&mut self, drop_behavior: DropBehavior) {$/;"	P	implementation:Transaction
set_enabled	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    pub fn set_enabled(&mut self, enabled: bool) {$/;"	P	implementation:Session
set_err_msg	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^unsafe fn set_err_msg(vtab: *mut ffi::sqlite3_vtab, err_msg: &str) {$/;"	f
set_estimated_cost	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    pub fn set_estimated_cost(&mut self, estimated_ost: f64) {$/;"	P	implementation:IndexInfo
set_estimated_rows	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    pub fn set_estimated_rows(&mut self, estimated_rows: i64) {$/;"	P	implementation:IndexInfo
set_idx_num	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    pub fn set_idx_num(&mut self, idx_num: c_int) {$/;"	P	implementation:IndexInfo
set_indirect	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    pub fn set_indirect(&mut self, indirect: bool) {$/;"	P	implementation:Session
set_limit	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/limits.rs	/^    pub fn set_limit(&self, limit: Limit, new_val: i32) -> i32 {$/;"	P	implementation:Connection
set_omit	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    pub fn set_omit(&mut self, omit: bool) {$/;"	P	implementation:IndexConstraintUsage
set_order_by_consumed	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    pub fn set_order_by_consumed(&mut self, order_by_consumed: bool) {$/;"	P	implementation:IndexInfo
set_prepared_statement_cache_capacity	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/cache.rs	/^    pub fn set_prepared_statement_cache_capacity(&self, capacity: usize) {$/;"	P	implementation:Connection
set_result	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/context.rs	/^pub(super) unsafe fn set_result(ctx: *mut sqlite3_context, result: &ToSqlOutput<'_>) {$/;"	f
set_result	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    pub fn set_result<T: ToSql>(&mut self, value: &T) -> Result<()> {$/;"	P	implementation:Context
set_statement_cache_key	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/raw_statement.rs	/^    pub(crate) fn set_statement_cache_key(&mut self, p: impl Into<Arc<str>>) {$/;"	P	implementation:RawStatement
size	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/blob/mod.rs	/^    pub fn size(&self) -> i32 {$/;"	P	implementation:Blob
size_hint	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:IndexConstraintIter
size_hint	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:OrderByIter
size_hint	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:ValueIter
small_cstr	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/mod.rs	/^mod small_cstr;$/;"	n
source	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/error.rs	/^    fn source(&self) -> Option<&(dyn error::Error + 'static)> {$/;"	P	implementation:Error
source	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/from_sql.rs	/^    fn source(&self) -> Option<&(dyn Error + 'static)> {$/;"	P	implementation:FromSqlError
sql	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    sql: &'sql str,$/;"	m	struct:Batch
sql	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/raw_statement.rs	/^    pub fn sql(&self) -> Option<&CStr> {$/;"	P	implementation:RawStatement
sqlite_string	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/mod.rs	/^mod sqlite_string;$/;"	n
start_strm	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    pub fn start_strm<'input>(input: &&'input mut dyn Read) -> Result<ChangesetIter<'input>> {$/;"	P	implementation:ChangesetIter
statement	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^mod statement;$/;"	n
statement_cache_key	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/raw_statement.rs	/^    pub(crate) fn statement_cache_key(&self) -> Option<Arc<str>> {$/;"	P	implementation:RawStatement
statement_cache_key	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/raw_statement.rs	/^    statement_cache_key: Option<Arc<str>>,$/;"	m	struct:RawStatement
step	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/backup.rs	/^    pub fn step(&self, num_pages: c_int) -> Result<StepResult> {$/;"	P	implementation:Backup
step	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^        fn step(&self, _ctx: &mut Context<'_>, sum: &mut i64) -> Result<()> {$/;"	P	implementation:test::Count
step	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^        fn step(&self, ctx: &mut Context<'_>, sum: &mut i64) -> Result<()> {$/;"	P	implementation:test::Sum
step	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^    fn step(&self, _: &mut Context<'_>, _: &mut A) -> Result<()>;$/;"	P	interface:Aggregate
step	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/raw_statement.rs	/^    pub fn step(&self) -> c_int {$/;"	P	implementation:RawStatement
step	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    pub(super) fn step(&self) -> Result<bool> {$/;"	P	implementation:Statement
step	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/series.rs	/^    step: i64,$/;"	m	struct:SeriesTabCursor
stmt	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/cache.rs	/^    stmt: Option<Statement<'conn>>,$/;"	m	struct:CachedStatement
str	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^    impl Sealed for &str {}$/;"	c	module:sealed
str	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^impl RowIndex for &'_ str {$/;"	c
str	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/to_sql.rs	/^impl ToSql for str {$/;"	c
str	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/small_cstr.rs	/^impl PartialEq<SmallCString> for str {$/;"	c
str_for_sqlite	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^fn str_for_sqlite(s: &[u8]) -> Result<(*const c_char, c_int, ffi::sqlite3_destructor_type)> {$/;"	f
str_to_cstring	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^fn str_to_cstring(s: &str) -> Result<SmallCString> {$/;"	f
table_filter	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    pub fn table_filter<F>(&mut self, filter: Option<F>)$/;"	P	implementation:Session
table_name	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    pub fn table_name(&self) -> &str {$/;"	P	implementation:Operation
table_name	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    table_name: &'item str,$/;"	m	struct:Operation
tail	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    tail: usize,$/;"	m	struct:Batch
tail	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/raw_statement.rs	/^    pub fn tail(&self) -> usize {$/;"	P	implementation:RawStatement
tail	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/raw_statement.rs	/^    tail: usize,$/;"	m	struct:RawStatement
test	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/backup.rs	/^mod test {$/;"	n
test	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/blob/mod.rs	/^mod test {$/;"	n
test	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/blob/pos_io.rs	/^mod test {$/;"	n
test	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/busy.rs	/^mod test {$/;"	n
test	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/cache.rs	/^mod test {$/;"	n
test	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/collation.rs	/^mod test {$/;"	n
test	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/column.rs	/^mod test {$/;"	n
test	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/config.rs	/^mod test {$/;"	n
test	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^mod test {$/;"	n
test	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/hooks.rs	/^mod test {$/;"	n
test	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^mod test {$/;"	n
test	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/limits.rs	/^mod test {$/;"	n
test	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/pragma.rs	/^mod test {$/;"	n
test	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^mod test {$/;"	n
test	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^mod test {$/;"	n
test	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/trace.rs	/^mod test {$/;"	n
test	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^mod test {$/;"	n
test	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/chrono.rs	/^mod test {$/;"	n
test	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/from_sql.rs	/^mod test {$/;"	n
test	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/mod.rs	/^mod test {$/;"	n
test	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/serde_json.rs	/^mod test {$/;"	n
test	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/time.rs	/^mod test {$/;"	n
test	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/to_sql.rs	/^mod test {$/;"	n
test	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/url.rs	/^mod test {$/;"	n
test	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/unlock_notify.rs	/^mod test {$/;"	n
test	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/param_cache.rs	/^mod test {$/;"	n
test	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/small_cstr.rs	/^mod test {$/;"	n
test	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/sqlite_string.rs	/^mod test {$/;"	n
test	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/array.rs	/^mod test {$/;"	n
test	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/csvtab.rs	/^mod test {$/;"	n
test	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^mod test {$/;"	n
test	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/series.rs	/^mod test {$/;"	n
test_alter_table	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    fn test_alter_table() -> Result<()> {$/;"	f	module:test
test_array_module	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/array.rs	/^    fn test_array_module() -> Result<()> {$/;"	f	module:test
test_backup	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/backup.rs	/^    fn test_backup() -> Result<()> {$/;"	f	module:test
test_backup_attached	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/backup.rs	/^    fn test_backup_attached() -> Result<()> {$/;"	f	module:test
test_backup_temp	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/backup.rs	/^    fn test_backup_temp() -> Result<()> {$/;"	f	module:test
test_batch	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    fn test_batch() -> Result<()> {$/;"	f	module:test
test_bind_parameters	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    fn test_bind_parameters() -> Result<()> {$/;"	f	module:test
test_blob	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/blob/mod.rs	/^    fn test_blob() -> Result<()> {$/;"	f	module:test
test_blob	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/mod.rs	/^    fn test_blob() -> Result<()> {$/;"	f	module:test
test_blob_in_bufreader	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/blob/mod.rs	/^    fn test_blob_in_bufreader() -> Result<()> {$/;"	f	module:test
test_blob_in_bufwriter	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/blob/mod.rs	/^    fn test_blob_in_bufwriter() -> Result<()> {$/;"	f	module:test
test_box_deref	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/to_sql.rs	/^    fn test_box_deref() {$/;"	f	module:test
test_box_direct	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/to_sql.rs	/^    fn test_box_direct() {$/;"	f	module:test
test_box_dyn	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/to_sql.rs	/^    fn test_box_dyn() {$/;"	f	module:test
test_busy_handler	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/busy.rs	/^    fn test_busy_handler() {$/;"	f	module:test
test_busy_timeout	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/busy.rs	/^    fn test_busy_timeout() {$/;"	f	module:test
test_cache	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/cache.rs	/^    fn test_cache() -> Result<()> {$/;"	f	module:test
test_cache	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/param_cache.rs	/^    fn test_cache() {$/;"	f	module:test
test_cache_key	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/cache.rs	/^    fn test_cache_key() -> Result<()> {$/;"	f	module:test
test_cells	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/to_sql.rs	/^    fn test_cells() {$/;"	f	module:test
test_changeset	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    fn test_changeset() -> Result<()> {$/;"	f	module:test
test_changeset_apply	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    fn test_changeset_apply() -> Result<()> {$/;"	f	module:test
test_changeset_apply_strm	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    fn test_changeset_apply_strm() -> Result<()> {$/;"	f	module:test
test_changeset_strm	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    fn test_changeset_strm() -> Result<()> {$/;"	f	module:test
test_close_retry	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    fn test_close_retry() -> Result<()> {$/;"	f	module:test
test_collation_needed	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/collation.rs	/^    fn test_collation_needed() -> Result<()> {$/;"	f	module:test
test_column_name_in_error	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/column.rs	/^    fn test_column_name_in_error() -> Result<()> {$/;"	f	module:test
test_column_name_reference	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/column.rs	/^    fn test_column_name_reference() -> Result<()> {$/;"	f	module:test
test_columns	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/column.rs	/^    fn test_columns() -> Result<()> {$/;"	f	module:test
test_comment_and_sql_stmt	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    fn test_comment_and_sql_stmt() -> Result<()> {$/;"	f	module:test
test_comment_stmt	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    fn test_comment_stmt() -> Result<()> {$/;"	f	module:test
test_commit_hook	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/hooks.rs	/^    fn test_commit_hook() -> Result<()> {$/;"	f	module:test
test_concurrent_transactions_busy_commit	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    fn test_concurrent_transactions_busy_commit() -> Result<()> {$/;"	f	module:test
test_connection_close	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/cache.rs	/^    fn test_connection_close() -> Result<()> {$/;"	f	module:test
test_conversion	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/mod.rs	/^    macro_rules! test_conversion {$/;"	M	module:test
test_count	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^    fn test_count() -> Result<()> {$/;"	f	module:test
test_cow_str	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/to_sql.rs	/^    fn test_cow_str() {$/;"	f	module:test
test_csv_cursor	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/csvtab.rs	/^    fn test_csv_cursor() -> Result<()> {$/;"	f	module:test
test_csv_module	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/csvtab.rs	/^    fn test_csv_module() -> Result<()> {$/;"	f	module:test
test_date_time_local	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/chrono.rs	/^    fn test_date_time_local() -> Result<()> {$/;"	f	module:test
test_date_time_param	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/chrono.rs	/^    fn test_date_time_param() -> Result<()> {$/;"	f	module:test
test_date_time_utc	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/chrono.rs	/^    fn test_date_time_utc() -> Result<()> {$/;"	f	module:test
test_db_config	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/config.rs	/^    fn test_db_config() -> Result<()> {$/;"	f	module:test
test_ddl	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/cache.rs	/^    fn test_ddl() -> Result<()> {$/;"	f	module:test
test_default_busy	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/busy.rs	/^    fn test_default_busy() -> Result<()> {$/;"	f	module:test
test_dequote	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    fn test_dequote() {$/;"	f	module:test
test_discard	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/cache.rs	/^    fn test_discard() -> Result<()> {$/;"	f	module:test
test_drop	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    fn test_drop() -> Result<()> {$/;"	f	module:test
test_dyn_box	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    fn test_dyn_box() -> Result<()> {$/;"	f	module:test
test_dynamic	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    fn test_dynamic() -> Result<()> {$/;"	f	module:test
test_dynamic_type	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/mod.rs	/^    fn test_dynamic_type() -> Result<()> {$/;"	f	module:test
test_empty_blob	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/mod.rs	/^    fn test_empty_blob() -> Result<()> {$/;"	f	module:test
test_empty_stmt	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/cache.rs	/^    fn test_empty_stmt() -> Result<()> {$/;"	f	module:test
test_empty_stmt	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    fn test_empty_stmt() -> Result<()> {$/;"	f	module:test
test_execute	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    fn test_execute() -> Result<()> {$/;"	f	module:test
test_execute_batch	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    fn test_execute_batch() -> Result<()> {$/;"	f	module:test
test_execute_multiple	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    fn test_execute_multiple() {$/;"	f	module:test
test_execute_named	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    fn test_execute_named() -> Result<()> {$/;"	f	module:test
test_execute_select	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    fn test_execute_select() {$/;"	f	module:test
test_exists	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    fn test_exists() -> Result<()> {$/;"	f	module:test
test_expanded_sql	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    fn test_expanded_sql() -> Result<()> {$/;"	f	module:test
test_explicit_rollback_commit	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    fn test_explicit_rollback_commit() -> Result<()> {$/;"	f	module:test
test_fn_commit_hook	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/hooks.rs	/^    fn test_fn_commit_hook() -> Result<()> {$/;"	f	module:test
test_from_handle	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    fn test_from_handle() -> Result<()> {$/;"	f	module:test
test_from_str	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/sqlite_string.rs	/^    fn test_from_str() {$/;"	f	module:test
test_function_half	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^    fn test_function_half() -> Result<()> {$/;"	f	module:test
test_function_regexp_with_auxilliary	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^    fn test_function_regexp_with_auxilliary() -> Result<()> {$/;"	f	module:test
test_get_aux_type_checking	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^    fn test_get_aux_type_checking() -> Result<()> {$/;"	f	module:test
test_get_raw	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    fn test_get_raw() -> Result<()> {$/;"	f	module:test
test_i128	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/to_sql.rs	/^    fn test_i128() -> crate::Result<()> {$/;"	f	module:test
test_ignore_drop_behavior	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    fn test_ignore_drop_behavior() -> Result<()> {$/;"	f	module:test
test_insert	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    fn test_insert() -> Result<()> {$/;"	f	module:test
test_insert_different_tables	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    fn test_insert_different_tables() -> Result<()> {$/;"	f	module:test
test_integral_ranges	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/from_sql.rs	/^    fn test_integral_ranges() -> Result<()> {$/;"	f	module:test
test_integral_types	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/to_sql.rs	/^    fn test_integral_types() {$/;"	f	module:test
test_interrupt	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    fn test_interrupt() -> Result<()> {$/;"	f	module:test
test_interrupt_close	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    fn test_interrupt_close() {$/;"	f	module:test
test_into_raw	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/sqlite_string.rs	/^    fn test_into_raw() {$/;"	f	module:test
test_invalid_unicode_file_names	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    fn test_invalid_unicode_file_names() -> Result<()> {$/;"	f	module:test
test_is_autocommit	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    fn test_is_autocommit() {$/;"	f	module:test
test_is_busy	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    fn test_is_busy() -> Result<()> {$/;"	f	module:test
test_json_value	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/serde_json.rs	/^    fn test_json_value() -> Result<()> {$/;"	f	module:test
test_last_insert_rowid	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    fn test_last_insert_rowid() -> Result<()> {$/;"	f	module:test
test_lenient_parse_timezone	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/chrono.rs	/^    fn test_lenient_parse_timezone() {$/;"	f	module:test
test_limit	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/limits.rs	/^    fn test_limit() -> Result<()> {$/;"	f	module:test
test_lossy	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/sqlite_string.rs	/^    fn test_lossy() {$/;"	f	module:test
test_mismatched_types	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/mod.rs	/^    fn test_mismatched_types() -> Result<()> {$/;"	f	module:test
test_naive_date	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/chrono.rs	/^    fn test_naive_date() -> Result<()> {$/;"	f	module:test
test_naive_date_time	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/chrono.rs	/^    fn test_naive_date_time() -> Result<()> {$/;"	f	module:test
test_naive_date_time_param	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/chrono.rs	/^    fn test_naive_date_time_param() -> Result<()> {$/;"	f	module:test
test_naive_time	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/chrono.rs	/^    fn test_naive_time() -> Result<()> {$/;"	f	module:test
test_notnull_constraint_error	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    fn test_notnull_constraint_error() -> Result<()> {$/;"	f	module:test
test_nul_byte	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    fn test_nul_byte() -> Result<()> {$/;"	f	module:test
test_numeric_conversions	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/mod.rs	/^    fn test_numeric_conversions() -> Result<()> {$/;"	f	module:test
test_offset_date_time	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/time.rs	/^    fn test_offset_date_time() -> Result<()> {$/;"	f	module:test
test_open	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    fn test_open() {$/;"	f	module:test
test_open_failure	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    fn test_open_failure() {$/;"	f	module:test
test_open_with_flags	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    fn test_open_with_flags() {$/;"	f	module:test
test_option	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/mod.rs	/^    fn test_option() -> Result<()> {$/;"	f	module:test
test_optional	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    fn test_optional() -> Result<()> {$/;"	f	module:test
test_param	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/time.rs	/^    fn test_param() -> Result<()> {$/;"	f	module:test
test_parameter_name	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    fn test_parameter_name() -> Result<()> {$/;"	f	module:test
test_params	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    fn test_params() -> Result<()> {$/;"	f	module:test
test_parse_boolean	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/mod.rs	/^    fn test_parse_boolean() {$/;"	f	module:test
test_persistence	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    fn test_persistence() -> Result<()> {$/;"	f	module:test
test_pos_io	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/blob/pos_io.rs	/^    fn test_pos_io() -> Result<()> {$/;"	f	module:test
test_pragma_query_row	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    fn test_pragma_query_row() -> Result<()> {$/;"	f	module:test
test_prepare_column_names	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    fn test_prepare_column_names() -> Result<()> {$/;"	f	module:test
test_prepare_execute	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    fn test_prepare_execute() -> Result<()> {$/;"	f	module:test
test_prepare_failures	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    fn test_prepare_failures() -> Result<()> {$/;"	f	module:test
test_prepare_query	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    fn test_prepare_query() -> Result<()> {$/;"	f	module:test
test_profile	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/trace.rs	/^    fn test_profile() -> Result<()> {$/;"	f	module:test
test_progress_handler	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/hooks.rs	/^    fn test_progress_handler() -> Result<()> {$/;"	f	module:test
test_progress_handler_interrupt	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/hooks.rs	/^    fn test_progress_handler_interrupt() -> Result<()> {$/;"	f	module:test
test_query_and_then	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^        fn test_query_and_then() -> Result<()> {$/;"	f	module:test::query_and_then_tests
test_query_and_then_by_name	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    fn test_query_and_then_by_name() -> Result<()> {$/;"	f	module:test
test_query_and_then_custom_error	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^        fn test_query_and_then_custom_error() -> CustomResult<()> {$/;"	f	module:test::query_and_then_tests
test_query_and_then_custom_error_fails	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^        fn test_query_and_then_custom_error_fails() -> Result<()> {$/;"	f	module:test::query_and_then_tests
test_query_and_then_fails	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^        fn test_query_and_then_fails() -> Result<()> {$/;"	f	module:test::query_and_then_tests
test_query_and_then_named	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    fn test_query_and_then_named() -> Result<()> {$/;"	f	module:test
test_query_by_column_name	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    fn test_query_by_column_name() -> Result<()> {$/;"	f	module:test
test_query_by_column_name_ignore_case	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    fn test_query_by_column_name_ignore_case() -> Result<()> {$/;"	f	module:test
test_query_map	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    fn test_query_map() -> Result<()> {$/;"	f	module:test
test_query_map_named	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    fn test_query_map_named() -> Result<()> {$/;"	f	module:test
test_query_named	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    fn test_query_named() -> Result<()> {$/;"	f	module:test
test_query_row	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    fn test_query_row() -> Result<()> {$/;"	f	module:test
test_query_row	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    fn test_query_row() -> Result<()> {$/;"	f	module:test
test_query_row_and_then_custom_error	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^        fn test_query_row_and_then_custom_error() -> CustomResult<()> {$/;"	f	module:test::query_and_then_tests
test_query_row_and_then_custom_error_fails	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^        fn test_query_row_and_then_custom_error_fails() -> Result<()> {$/;"	f	module:test::query_and_then_tests
test_raw_binding	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    fn test_raw_binding() -> Result<()> {$/;"	f	module:test
test_rc	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    fn test_rc() -> Result<()> {$/;"	f	module:test
test_remove_function	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^    fn test_remove_function() -> Result<()> {$/;"	f	module:test
test_returning	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    fn test_returning() -> Result<()> {$/;"	f	module:test
test_rollback_hook	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/hooks.rs	/^    fn test_rollback_hook() -> Result<()> {$/;"	f	module:test
test_savepoint	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    fn test_savepoint() -> Result<()> {$/;"	f	module:test
test_savepoint_names	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    fn test_savepoint_names() -> Result<()> {$/;"	f	module:test
test_semi_colon_stmt	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    fn test_semi_colon_stmt() -> Result<()> {$/;"	f	module:test
test_series_module	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/series.rs	/^    fn test_series_module() -> Result<()> {$/;"	f	module:test
test_session_empty	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    fn test_session_empty() -> Result<()> {$/;"	f	module:test
test_session_set_enabled	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    fn test_session_set_enabled() -> Result<()> {$/;"	f	module:test
test_session_set_indirect	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^    fn test_session_set_indirect() -> Result<()> {$/;"	f	module:test
test_set_capacity	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/cache.rs	/^    fn test_set_capacity() -> Result<()> {$/;"	f	module:test
test_small_cstring	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/small_cstr.rs	/^    fn test_small_cstring() {$/;"	f	module:test
test_sql_url	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/url.rs	/^    fn test_sql_url() -> Result<()> {$/;"	f	module:test
test_sqlite_functions	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/chrono.rs	/^    fn test_sqlite_functions() -> Result<()> {$/;"	f	module:test
test_sqlite_functions	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/time.rs	/^    fn test_sqlite_functions() -> Result<()> {$/;"	f	module:test
test_statement_debugging	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    fn test_statement_debugging() -> Result<()> {$/;"	f	module:test
test_stmt_execute_named	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    fn test_stmt_execute_named() -> Result<()> {$/;"	f	module:test
test_str	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/mod.rs	/^    fn test_str() -> Result<()> {$/;"	f	module:test
test_string	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/mod.rs	/^    fn test_string() -> Result<()> {$/;"	f	module:test
test_sum	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^    fn test_sum() -> Result<()> {$/;"	f	module:test
test_trace	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/trace.rs	/^    fn test_trace() -> Result<()> {$/;"	f	module:test
test_try_from_row_for_tuple_1	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^    fn test_try_from_row_for_tuple_1() -> Result<()> {$/;"	f	module:tests
test_try_from_row_for_tuple_16	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^    fn test_try_from_row_for_tuple_16() -> Result<()> {$/;"	f	module:tests
test_try_from_row_for_tuple_2	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^    fn test_try_from_row_for_tuple_2() -> Result<()> {$/;"	f	module:tests
test_unbound_parameters_are_null	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    fn test_unbound_parameters_are_null() -> Result<()> {$/;"	f	module:test
test_unbound_parameters_are_reused	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    fn test_unbound_parameters_are_reused() -> Result<()> {$/;"	f	module:test
test_unchecked_nesting	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    fn test_unchecked_nesting() -> Result<()> {$/;"	f	module:test
test_unicase	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/collation.rs	/^    fn test_unicase() -> Result<()> {$/;"	f	module:test
test_unlock_notify	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/unlock_notify.rs	/^    fn test_unlock_notify() -> Result<()> {$/;"	f	module:test
test_update_hook	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/hooks.rs	/^    fn test_update_hook() -> Result<()> {$/;"	f	module:test
test_utf16_conversion	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    fn test_utf16_conversion() -> Result<()> {$/;"	f	module:test
test_uuid	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/to_sql.rs	/^    fn test_uuid() -> crate::Result<()> {$/;"	f	module:test
test_value	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/mod.rs	/^    fn test_value() -> Result<()> {$/;"	f	module:test
test_varargs_function	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^    fn test_varargs_function() -> Result<()> {$/;"	f	module:test
test_version_string	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    fn test_version_string() {$/;"	f	module:test
test_window	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^    fn test_window() -> Result<()> {$/;"	f	module:test
tests	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^mod tests {$/;"	n
time	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/mod.rs	/^mod time;$/;"	n
to_cstring	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^    fn to_cstring(&self) -> Result<util::SmallCString> {$/;"	P	implementation:DatabaseName
to_sql	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/blob/mod.rs	/^    fn to_sql(&self) -> Result<ToSqlOutput<'_>> {$/;"	P	implementation:ZeroBlob
to_sql	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/chrono.rs	/^    fn to_sql(&self) -> Result<ToSqlOutput<'_>> {$/;"	P	implementation:DateTime
to_sql	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/chrono.rs	/^    fn to_sql(&self) -> Result<ToSqlOutput<'_>> {$/;"	P	implementation:NaiveDate
to_sql	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/chrono.rs	/^    fn to_sql(&self) -> Result<ToSqlOutput<'_>> {$/;"	P	implementation:NaiveDateTime
to_sql	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/chrono.rs	/^    fn to_sql(&self) -> Result<ToSqlOutput<'_>> {$/;"	P	implementation:NaiveTime
to_sql	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/mod.rs	/^mod to_sql;$/;"	n
to_sql	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/serde_json.rs	/^    fn to_sql(&self) -> Result<ToSqlOutput<'_>> {$/;"	P	implementation:Value
to_sql	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/time.rs	/^    fn to_sql(&self) -> Result<ToSqlOutput<'_>> {$/;"	P	implementation:OffsetDateTime
to_sql	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/to_sql.rs	/^    fn to_sql(&self) -> Result<ToSqlOutput<'_>> {$/;"	P	implementation:Arc
to_sql	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/to_sql.rs	/^    fn to_sql(&self) -> Result<ToSqlOutput<'_>> {$/;"	P	implementation:Box
to_sql	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/to_sql.rs	/^    fn to_sql(&self) -> Result<ToSqlOutput<'_>> {$/;"	P	implementation:Cow
to_sql	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/to_sql.rs	/^    fn to_sql(&self) -> Result<ToSqlOutput<'_>> {$/;"	P	implementation:Option
to_sql	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/to_sql.rs	/^    fn to_sql(&self) -> Result<ToSqlOutput<'_>> {$/;"	P	implementation:Rc
to_sql	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/to_sql.rs	/^    fn to_sql(&self) -> Result<ToSqlOutput<'_>> {$/;"	P	implementation:String
to_sql	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/to_sql.rs	/^    fn to_sql(&self) -> Result<ToSqlOutput<'_>> {$/;"	P	implementation:ToSqlOutput
to_sql	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/to_sql.rs	/^    fn to_sql(&self) -> Result<ToSqlOutput<'_>> {$/;"	P	implementation:Value
to_sql	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/to_sql.rs	/^    fn to_sql(&self) -> Result<ToSqlOutput<'_>> {$/;"	P	implementation:Vec
to_sql	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/to_sql.rs	/^    fn to_sql(&self) -> Result<ToSqlOutput<'_>> {$/;"	P	implementation:str
to_sql	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/to_sql.rs	/^    fn to_sql(&self) -> Result<ToSqlOutput<'_>> {$/;"	P	implementation:u8
to_sql	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/to_sql.rs	/^    fn to_sql(&self) -> Result<ToSqlOutput<'_>> {$/;"	f
to_sql	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/to_sql.rs	/^    fn to_sql(&self) -> Result<ToSqlOutput<'_>>;$/;"	P	interface:ToSql
to_sql	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/url.rs	/^    fn to_sql(&self) -> Result<ToSqlOutput<'_>> {$/;"	P	implementation:Url
to_sql	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/array.rs	/^    fn to_sql(&self) -> Result<ToSqlOutput<'_>> {$/;"	P	implementation:Array
to_sql_self	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/to_sql.rs	/^macro_rules! to_sql_self($/;"	M
to_sql_self_fallible	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/to_sql.rs	/^macro_rules! to_sql_self_fallible($/;"	M
to_string_lossy	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/util/sqlite_string.rs	/^    pub(crate) fn to_string_lossy(&self) -> std::borrow::Cow<'_, str> {$/;"	P	implementation:SqliteMallocString
trace	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^pub mod trace;$/;"	n
trace	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/trace.rs	/^    pub fn trace(&mut self, trace_fn: Option<fn(&str)>) {$/;"	P	implementation:Connection
trace_callback	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/trace.rs	/^        unsafe extern "C" fn trace_callback(p_arg: *mut c_void, z_sql: *const c_char) {$/;"	f	method:Connection::trace
tracer	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/trace.rs	/^        fn tracer(s: &str) {$/;"	f	function:test::test_trace
transaction	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^mod transaction;$/;"	n
transaction	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    pub fn transaction(&mut self) -> Result<Transaction<'_>> {$/;"	P	implementation:Connection
transaction_with_behavior	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    pub fn transaction_with_behavior($/;"	P	implementation:Connection
tuple_try_from_row	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^macro_rules! tuple_try_from_row {$/;"	M
tuples_try_from_row	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^macro_rules! tuples_try_from_row {$/;"	M
types	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^pub mod types;$/;"	n
u8	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/to_sql.rs	/^impl ToSql for [u8] {$/;"	c
unchecked_transaction	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    pub fn unchecked_transaction(&self) -> Result<Transaction<'_>> {$/;"	P	implementation:Connection
unicase_compare	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/collation.rs	/^    fn unicase_compare(s1: &str, s2: &str) -> Ordering {$/;"	f	module:test
unlock_notify	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^mod unlock_notify;$/;"	n
unlock_notify_cb	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/unlock_notify.rs	/^unsafe extern "C" fn unlock_notify_cb(ap_arg: *mut *mut c_void, n_arg: c_int) {$/;"	f
update_hook	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/hooks.rs	/^    fn update_hook<'c, F>(&'c mut self, hook: Option<F>)$/;"	P	implementation:InnerConnection
update_hook	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/hooks.rs	/^    pub fn update_hook<'c, F>(&'c self, hook: Option<F>)$/;"	P	implementation:Connection
url	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/mod.rs	/^mod url;$/;"	n
usize	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^    impl Sealed for usize {}$/;"	c	module:sealed
usize	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/row.rs	/^impl RowIndex for usize {$/;"	c
util	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^pub(crate) mod util;$/;"	n
value	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^        fn value(&self, sum: Option<&i64>) -> Result<Option<i64>> {$/;"	P	implementation:test::Sum
value	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/functions.rs	/^    fn value(&self, _: Option<&A>) -> Result<T>;$/;"	P	interface:WindowAggregate
value	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/mod.rs	/^mod value;$/;"	n
value	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/series.rs	/^    value: i64,$/;"	m	struct:SeriesTabCursor
value_ref	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/statement.rs	/^    pub(super) fn value_ref(&self, col: usize) -> ValueRef<'_> {$/;"	P	implementation:Statement
value_ref	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/types/mod.rs	/^mod value_ref;$/;"	n
version	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^mod version;$/;"	n
version	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/version.rs	/^pub fn version() -> &'static str {$/;"	f
version_number	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/version.rs	/^pub fn version_number() -> i32 {$/;"	f
vtab	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/lib.rs	/^pub mod vtab;$/;"	n
vtab	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/vtab/csvtab.rs	/^    fn vtab(&self) -> &CsvTab {$/;"	P	implementation:CsvTabCursor
wait	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/unlock_notify.rs	/^    fn wait(&self) {$/;"	P	implementation:UnlockNotification
wait_for_unlock_notify	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/unlock_notify.rs	/^pub unsafe fn wait_for_unlock_notify(_db: *mut ffi::sqlite3) -> c_int {$/;"	f
wait_for_unlock_notify	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/unlock_notify.rs	/^pub unsafe fn wait_for_unlock_notify(db: *mut ffi::sqlite3) -> c_int {$/;"	f
with_capacity	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/cache.rs	/^    pub fn with_capacity(capacity: usize) -> StatementCache {$/;"	P	implementation:StatementCache
with_depth	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    fn with_depth(conn: &Connection, depth: u32) -> Result<Savepoint<'_>> {$/;"	P	implementation:Savepoint
with_depth_and_name	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    fn with_depth_and_name<T: Into<String>>($/;"	P	implementation:Savepoint
with_name	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/transaction.rs	/^    pub fn with_name<T: Into<String>>(conn: &mut Connection, name: T) -> Result<Savepoint<'_>> {$/;"	P	implementation:Savepoint
wrap_and_escape	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/pragma.rs	/^    fn wrap_and_escape(&mut self, s: &str, quote: char) {$/;"	P	implementation:Sql
wrap_and_escape	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/pragma.rs	/^    fn wrap_and_escape() {$/;"	f	module:test
write	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/blob/mod.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:Blob
write_all_at	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/blob/pos_io.rs	/^    pub fn write_all_at(&mut self, buf: &[u8], write_start: usize) -> Result<()> {$/;"	P	implementation:Blob
write_at	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/blob/pos_io.rs	/^    pub fn write_at(&mut self, buf: &[u8], write_start: usize) -> Result<()> {$/;"	P	implementation:Blob
x_input	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^unsafe extern "C" fn x_input(p_in: *mut c_void, data: *mut c_void, len: *mut c_int) -> c_int {$/;"	f
x_output	/home/cht/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.25.3/src/session.rs	/^unsafe extern "C" fn x_output(p_out: *mut c_void, data: *const c_void, len: c_int) -> c_int {$/;"	f
